<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/PrefsHelper.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/PrefsHelper.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Context;&#10;import android.content.SharedPreferences;&#10;&#10;public class PrefsHelper {&#10;    private static final String PREF_NAME = &quot;student_prefs&quot;; // unified name&#10;&#10;    private static final String KEY_TOKEN = &quot;token&quot;;&#10;    private static final String KEY_PH906 = &quot;ph906&quot;;&#10;    private static final String KEY_FULL_NAME = &quot;full_name&quot;;&#10;    private static final String KEY_BIRTHDAY = &quot;birthday&quot;;&#10;    private static final String KEY_VERSION = &quot;version&quot;; // minor/adult&#10;    private static final String KEY_IS_DEFAULT_PASSWORD = &quot;is_default_password&quot;;&#10;    private static final String KEY_IS_LOGGED_IN = &quot;is_logged_in&quot;;&#10;    private static final String KEY_PROFILE_PHOTO_URI = &quot;profile_photo_uri&quot;;&#10;&#10;    private final SharedPreferences prefs;&#10;    private final SharedPreferences.Editor editor;&#10;&#10;    public PrefsHelper(Context context) {&#10;        prefs = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);&#10;        editor = prefs.edit();&#10;    }&#10;&#10;    // ===== Save login info =====&#10;    public void saveLoginInfo(String ph906, String token, String fullName, boolean isDefaultPassword) {&#10;        editor.putString(KEY_PH906, ph906);&#10;        editor.putString(KEY_TOKEN, token);&#10;        editor.putString(KEY_FULL_NAME, fullName);&#10;        editor.putBoolean(KEY_IS_DEFAULT_PASSWORD, isDefaultPassword);&#10;        editor.putBoolean(KEY_IS_LOGGED_IN, true);&#10;        editor.apply();&#10;    }&#10;&#10;    public void saveBirthday(String birthday) {&#10;        editor.putString(KEY_BIRTHDAY, birthday);&#10;        editor.apply();&#10;    }&#10;&#10;    public void saveVersion(String version) {&#10;        editor.putString(KEY_VERSION, version);&#10;        editor.apply();&#10;    }&#10;&#10;    public void saveProfilePhotoUri(String uri) {&#10;        editor.putString(KEY_PROFILE_PHOTO_URI, uri);&#10;        editor.apply();&#10;    }&#10;&#10;    // ===== Getters =====&#10;    public String getPh906() {&#10;        return prefs.getString(KEY_PH906, null);&#10;    }&#10;&#10;    public String getToken() {&#10;        return prefs.getString(KEY_TOKEN, null);&#10;    }&#10;&#10;    public String getFullName() {&#10;        return prefs.getString(KEY_FULL_NAME, &quot;&quot;);&#10;    }&#10;&#10;    public boolean isDefaultPassword() {&#10;        return prefs.getBoolean(KEY_IS_DEFAULT_PASSWORD, true);&#10;    }&#10;&#10;    public String getBirthday() {&#10;        return prefs.getString(KEY_BIRTHDAY, null);&#10;    }&#10;&#10;    public String getVersion() {&#10;        return prefs.getString(KEY_VERSION, &quot;minor&quot;);&#10;    }&#10;&#10;    public String getProfilePhotoUri() {&#10;        return prefs.getString(KEY_PROFILE_PHOTO_URI, null);&#10;    }&#10;&#10;    // ===== Session check =====&#10;    public boolean isLoggedIn() {&#10;        return prefs.getBoolean(KEY_IS_LOGGED_IN, false);&#10;    }&#10;&#10;    public void clearAll() {&#10;        editor.clear().apply();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Context;&#10;import android.content.SharedPreferences;&#10;&#10;public class PrefsHelper {&#10;    private static final String PREF_NAME = &quot;student_prefs&quot;; // unified name&#10;&#10;    private static final String KEY_TOKEN = &quot;token&quot;;&#10;    private static final String KEY_PH906 = &quot;ph906&quot;;&#10;    private static final String KEY_FULL_NAME = &quot;full_name&quot;;&#10;    private static final String KEY_BIRTHDAY = &quot;birthday&quot;;&#10;    private static final String KEY_VERSION = &quot;version&quot;; // minor/adult&#10;    private static final String KEY_IS_DEFAULT_PASSWORD = &quot;is_default_password&quot;;&#10;    private static final String KEY_IS_LOGGED_IN = &quot;is_logged_in&quot;;&#10;    private static final String KEY_PROFILE_PHOTO_URI = &quot;profile_photo_uri&quot;;&#10;&#10;    private final SharedPreferences prefs;&#10;    private final SharedPreferences.Editor editor;&#10;&#10;    public PrefsHelper(Context context) {&#10;        prefs = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);&#10;        editor = prefs.edit();&#10;    }&#10;&#10;    // ===== Save login info =====&#10;    public void saveLoginInfo(String ph906, String token, String fullName, boolean isDefaultPassword) {&#10;        editor.putString(KEY_PH906, ph906);&#10;        editor.putString(KEY_TOKEN, token);&#10;        editor.putString(KEY_FULL_NAME, fullName);&#10;        editor.putBoolean(KEY_IS_DEFAULT_PASSWORD, isDefaultPassword);&#10;        editor.putBoolean(KEY_IS_LOGGED_IN, true);&#10;        editor.apply();&#10;    }&#10;&#10;    public void saveBirthday(String birthday) {&#10;        editor.putString(KEY_BIRTHDAY, birthday);&#10;        editor.apply();&#10;    }&#10;&#10;    public void saveVersion(String version) {&#10;        editor.putString(KEY_VERSION, version);&#10;        editor.apply();&#10;    }&#10;&#10;    public void saveProfilePhotoUri(String uri) {&#10;        editor.putString(KEY_PROFILE_PHOTO_URI, uri);&#10;        editor.apply();&#10;    }&#10;&#10;    // ===== Getters =====&#10;    public String getPh906() {&#10;        return prefs.getString(KEY_PH906, null);&#10;    }&#10;&#10;    public String getToken() {&#10;        return prefs.getString(KEY_TOKEN, null);&#10;    }&#10;&#10;    public String getFullName() {&#10;        return prefs.getString(KEY_FULL_NAME, &quot;&quot;);&#10;    }&#10;&#10;    public boolean isDefaultPassword() {&#10;        return prefs.getBoolean(KEY_IS_DEFAULT_PASSWORD, true);&#10;    }&#10;&#10;    public String getBirthday() {&#10;        return prefs.getString(KEY_BIRTHDAY, null);&#10;    }&#10;&#10;    public String getVersion() {&#10;        return prefs.getString(KEY_VERSION, &quot;minor&quot;);&#10;    }&#10;&#10;    public String getProfilePhotoUri() {&#10;        return prefs.getString(KEY_PROFILE_PHOTO_URI, null);&#10;    }&#10;&#10;    // ===== Session check =====&#10;    public boolean isLoggedIn() {&#10;        return prefs.getBoolean(KEY_IS_LOGGED_IN, false);&#10;    }&#10;&#10;    public void clearAll() {&#10;        editor.clear().apply();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/api/ApiClient.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/api/ApiClient.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen.api;&#10;&#10;import android.content.Context;&#10;import android.net.Uri;&#10;import android.provider.OpenableColumns;&#10;import com.example.ph906_spalshscreen.PrefsHelper;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;import java.io.IOException;&#10;import java.util.Calendar;&#10;import java.util.concurrent.TimeUnit;&#10;import okio.BufferedSink;&#10;import okhttp3.Call;&#10;import okhttp3.Callback;&#10;import okhttp3.MediaType;&#10;import okhttp3.MultipartBody;&#10;import okhttp3.OkHttpClient;&#10;import okhttp3.Request;&#10;import okhttp3.RequestBody;&#10;import okhttp3.Response;&#10;import org.jetbrains.annotations.NotNull;&#10;&#10;public class ApiClient {&#10;&#10;    private static final String BASE_URL = &quot;https://hjcdc.swuitapp.com/api&quot;; // adjust if needed&#10;    private static final MediaType JSON = MediaType.parse(&quot;application/json; charset=utf-8&quot;);&#10;&#10;    private final OkHttpClient client;&#10;    private final PrefsHelper prefsHelper;&#10;    private final Context appContext;&#10;&#10;    public ApiClient(Context context) {&#10;        client = new OkHttpClient.Builder()&#10;                .connectTimeout(30, TimeUnit.SECONDS)&#10;                .readTimeout(30, TimeUnit.SECONDS)&#10;                .build();&#10;&#10;        prefsHelper = new PrefsHelper(context);&#10;        appContext = context.getApplicationContext();&#10;    }&#10;&#10;    // ==============================&#10;    // LOGIN&#10;    // ==============================&#10;    public void studentLogin(String ph906, String birthday, ApiCallback callback) {&#10;        try {&#10;            JSONObject json = new JSONObject();&#10;            json.put(&quot;ph906&quot;, ph906);&#10;            json.put(&quot;birthday&quot;, birthday);&#10;&#10;            RequestBody body = RequestBody.create(json.toString(), JSON); // updated signature&#10;            Request request = new Request.Builder()&#10;                    .url(BASE_URL + &quot;/login.php&quot;)&#10;                    .addHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#10;                    .post(body)&#10;                    .build();&#10;&#10;            client.newCall(request).enqueue(new Callback() {&#10;                @Override public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                    callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;                }&#10;&#10;                @Override public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                    String responseBody = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                    try {&#10;                        JSONObject jsonResponse = new JSONObject(responseBody);&#10;                        if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                            // Save details into prefs&#10;                            prefsHelper.saveLoginInfo(&#10;                                    jsonResponse.optString(&quot;ph906&quot;),&#10;                                    jsonResponse.optString(&quot;token&quot;),&#10;                                    jsonResponse.optString(&quot;first_name&quot;, &quot;&quot;) + &quot; &quot; + jsonResponse.optString(&quot;last_name&quot;, &quot;&quot;),&#10;                                    jsonResponse.optBoolean(&quot;is_default_password&quot;, true)&#10;                            );&#10;                            prefsHelper.saveBirthday(jsonResponse.optString(&quot;birthday&quot;, birthday));&#10;                            boolean adult = isAdultFromBirthday(jsonResponse.optString(&quot;birthday&quot;, birthday));&#10;                            prefsHelper.saveVersion(adult ? &quot;adult&quot; : &quot;minor&quot;);&#10;&#10;                            callback.onSuccess(jsonResponse);&#10;                        } else {&#10;                            callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Login failed&quot;));&#10;                        }&#10;                    } catch (JSONException e) {&#10;                        callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                    }&#10;                }&#10;            });&#10;        } catch (JSONException e) {&#10;            callback.onError(&quot;JSON creation error: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    // ==============================&#10;    // CHANGE PASSWORD&#10;    // ==============================&#10;    public void changePassword(String currentPassword, String newPassword, ApiCallback callback) {&#10;        String token = prefsHelper.getToken();&#10;        if (token == null) {&#10;            callback.onError(&quot;Not logged in&quot;);&#10;            return;&#10;        }&#10;&#10;        try {&#10;            JSONObject json = new JSONObject();&#10;            json.put(&quot;current_password&quot;, currentPassword);&#10;            json.put(&quot;new_password&quot;, newPassword);&#10;&#10;            RequestBody body = RequestBody.create(json.toString(), JSON); // updated signature&#10;            Request request = new Request.Builder()&#10;                    .url(BASE_URL + &quot;/change_password.php&quot;)&#10;                    .addHeader(&quot;Authorization&quot;, token)&#10;                    .addHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#10;                    .post(body)&#10;                    .build();&#10;&#10;            client.newCall(request).enqueue(new Callback() {&#10;                @Override public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                    callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;                }&#10;&#10;                @Override public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                    String responseBody = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                    try {&#10;                        JSONObject jsonResponse = new JSONObject(responseBody);&#10;                        if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                            // Update prefs: no longer default password&#10;                            prefsHelper.saveLoginInfo(&#10;                                    prefsHelper.getPh906(),&#10;                                    prefsHelper.getToken(),&#10;                                    prefsHelper.getFullName(),&#10;                                    false&#10;                            );&#10;                            callback.onSuccess(jsonResponse);&#10;                        } else {&#10;                            callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Failed to change password&quot;));&#10;                        }&#10;                    } catch (JSONException e) {&#10;                        callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                    }&#10;                }&#10;            });&#10;        } catch (JSONException e) {&#10;            callback.onError(&quot;JSON creation error: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    // ==============================&#10;    // PROFILE&#10;    // ==============================&#10;    public void getMyProfile(ApiCallback callback) {&#10;        requestWithToken(&quot;/my_profile.php&quot;, &quot;GET&quot;, null, callback);&#10;    }&#10;&#10;    public void updateMyProfile(JSONObject payload, ApiCallback callback) {&#10;        requestWithToken(&quot;/my_profile.php&quot;, &quot;PUT&quot;, payload, callback);&#10;    }&#10;&#10;    private void requestWithToken(String endpoint, String method, JSONObject jsonBody, ApiCallback callback) {&#10;        String token = prefsHelper.getToken();&#10;        if (token == null) {&#10;            callback.onError(&quot;Not logged in&quot;);&#10;            return;&#10;        }&#10;&#10;        Request.Builder builder = new Request.Builder()&#10;                .url(BASE_URL + endpoint)&#10;                .addHeader(&quot;Authorization&quot;, token)&#10;                .addHeader(&quot;Accept&quot;, &quot;application/json&quot;);&#10;&#10;        if (&quot;POST&quot;.equalsIgnoreCase(method) || &quot;PUT&quot;.equalsIgnoreCase(method)) {&#10;            RequestBody body = jsonBody != null ?&#10;                    RequestBody.create(jsonBody.toString(), JSON) : // updated signature&#10;                    RequestBody.create(&quot;{}&quot;, JSON); // updated signature&#10;            builder.method(method, body);&#10;        } else {&#10;            builder.get();&#10;        }&#10;&#10;        client.newCall(builder.build()).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;            }&#10;            @Override&#10;            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String res = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject jsonResponse = new JSONObject(res);&#10;                    if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                        callback.onSuccess(jsonResponse);&#10;                    }&#10;                    else {&#10;                        callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Request failed&quot;));&#10;                    }&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    // ==============================&#10;    // SESSION HELPERS&#10;    // ==============================&#10;    public boolean isLoggedIn() { return prefsHelper.isLoggedIn(); }&#10;    public String getFullName() { return prefsHelper.getFullName(); }&#10;    public String getLoggedInStudentId() { return prefsHelper.getPh906(); }&#10;    public String getSavedVersion() { return prefsHelper.getVersion(); }&#10;    public void logout() { prefsHelper.clearAll(); }&#10;&#10;    // ==============================&#10;    // AGE CALCULATOR&#10;    // ==============================&#10;    private boolean isAdultFromBirthday(String birthday) {&#10;        try {&#10;            String[] parts = birthday.split(&quot;-&quot;);&#10;            int year = Integer.parseInt(parts[0]);&#10;            int month = Integer.parseInt(parts[1]);&#10;            int day = Integer.parseInt(parts[2]);&#10;&#10;            Calendar dob = Calendar.getInstance();&#10;            dob.set(year, month - 1, day);&#10;&#10;            Calendar today = Calendar.getInstance();&#10;            int age = today.get(Calendar.YEAR) - dob.get(Calendar.YEAR);&#10;            if (today.get(Calendar.DAY_OF_YEAR) &lt; dob.get(Calendar.DAY_OF_YEAR)) age--;&#10;&#10;            return age &gt;= 18;&#10;        } catch (Exception e) {&#10;            return false;&#10;        }&#10;    }&#10;&#10;    // ==============================&#10;    // GET MASTERLIST (LETTERS)&#10;    // ==============================&#10;    /**&#10;     * Fetches the student masterlist from the PHP endpoint.&#10;     * The endpoint should be get_students.php on your server.&#10;     * Returns the JSON response to the provided ApiCallback.&#10;     */&#10;    public void getMasterlist(final ApiCallback callback) {&#10;        String endpointUrl = BASE_URL + &quot;/get_students.php&quot;;&#10;&#10;        Request request = new Request.Builder()&#10;                .url(endpointUrl)&#10;                .get()&#10;                .build();&#10;&#10;        client.newCall(request).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String responseBody = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject jsonResponse = new JSONObject(responseBody);&#10;                    callback.onSuccess(jsonResponse);&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;    // ==============================&#10;// UPDATE MASTERLIST ENTRY&#10;// ==============================&#10;    /**&#10;     * Updates a specific masterlist record.&#10;     * @param studentId the ph906 / user id&#10;     * @param payload   the JSON with updated fields&#10;     * @param callback  your callback&#10;     */&#10;    public void updateMasterlist(String studentId, JSONObject payload, ApiCallback callback) {&#10;        String token = prefsHelper.getToken(); // if you require auth header&#10;        // build your endpoint URL; adjust .php vs REST as needed&#10;        String url = BASE_URL + &quot;/masterlist/&quot; + studentId;&#10;&#10;        RequestBody body = RequestBody.create(payload.toString(), JSON);&#10;        Request.Builder builder = new Request.Builder()&#10;                .url(url)&#10;                .addHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#10;                .put(body); // HTTP PUT&#10;&#10;        // include Authorization header if your backend expects token&#10;        if (token != null &amp;&amp; !token.isEmpty()) {&#10;            builder.addHeader(&quot;Authorization&quot;, token);&#10;        }&#10;&#10;        client.newCall(builder.build()).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String res = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject jsonResponse = new JSONObject(res);&#10;                    // Adjust according to your backend's success field&#10;                    if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                        callback.onSuccess(jsonResponse);&#10;                    } else {&#10;                        callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Update failed&quot;));&#10;                    }&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Uploads a profile photo for the currently logged-in student.&#10;     * Endpoint: POST {BASE_URL}/upload_profile_photo.php&#10;     * Form fields: ph906 (digits only), photo (file)&#10;     * Returns JSON with {status, url}&#10;     */&#10;    public void uploadProfilePhoto(Uri imageUri, ApiCallback callback) {&#10;        if (imageUri == null) {&#10;            callback.onError(&quot;No image selected&quot;);&#10;            return;&#10;        }&#10;        String rawId = prefsHelper.getPh906();&#10;        if (rawId == null || rawId.trim().isEmpty()) {&#10;            callback.onError(&quot;No student id in session&quot;);&#10;            return;&#10;        }&#10;        String digits = rawId.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;);&#10;&#10;        String fileName = queryDisplayName(imageUri);&#10;        if (fileName == null || fileName.isEmpty()) fileName = &quot;profile.jpg&quot;;&#10;&#10;        RequestBody fileBody = new RequestBody() {&#10;            @Override public MediaType contentType() { return MediaType.parse(&quot;image/*&quot;); }&#10;            @Override public void writeTo(BufferedSink sink) throws IOException {&#10;                try (java.io.InputStream is = appContext.getContentResolver().openInputStream(imageUri)) {&#10;                    if (is == null) throw new IOException(&quot;Cannot open imageUri&quot;);&#10;                    byte[] buffer = new byte[8192];&#10;                    int read;&#10;                    while ((read = is.read(buffer)) != -1) {&#10;                        sink.write(buffer, 0, read);&#10;                    }&#10;                }&#10;            }&#10;        };&#10;&#10;        MultipartBody requestBody = new MultipartBody.Builder()&#10;                .setType(MultipartBody.FORM)&#10;                .addFormDataPart(&quot;ph906&quot;, digits)&#10;                .addFormDataPart(&quot;photo&quot;, fileName, fileBody)&#10;                .build();&#10;&#10;        Request.Builder reqBuilder = new Request.Builder()&#10;                .url(BASE_URL + &quot;/upload_profile_photo.php&quot;)&#10;                .post(requestBody)&#10;                .addHeader(&quot;Accept&quot;, &quot;application/json&quot;);&#10;        String token = prefsHelper.getToken();&#10;        if (token != null &amp;&amp; !token.isEmpty()) reqBuilder.addHeader(&quot;Authorization&quot;, token);&#10;&#10;        client.newCall(reqBuilder.build()).enqueue(new Callback() {&#10;            @Override public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Upload failed: &quot; + e.getMessage());&#10;            }&#10;            @Override public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String body = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject json = new JSONObject(body);&#10;                    if (&quot;success&quot;.equalsIgnoreCase(json.optString(&quot;status&quot;))) {&#10;                        callback.onSuccess(json);&#10;                    } else {&#10;                        callback.onError(json.optString(&quot;message&quot;, &quot;Upload failed&quot;));&#10;                    }&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    private String queryDisplayName(Uri uri) {&#10;        try (android.database.Cursor c = appContext.getContentResolver().query(uri, null, null, null, null)) {&#10;            if (c != null &amp;&amp; c.moveToFirst()) {&#10;                int idx = c.getColumnIndex(OpenableColumns.DISPLAY_NAME);&#10;                if (idx &gt;= 0) return c.getString(idx);&#10;            }&#10;        } catch (Exception ignored) {}&#10;        return null;&#10;    }&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen.api;&#10;&#10;import android.content.Context;&#10;import android.net.Uri;&#10;import android.provider.OpenableColumns;&#10;import com.example.ph906_spalshscreen.PrefsHelper;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;import java.io.IOException;&#10;import java.util.Calendar;&#10;import java.util.concurrent.TimeUnit;&#10;import okio.BufferedSink;&#10;import okhttp3.Call;&#10;import okhttp3.Callback;&#10;import okhttp3.MediaType;&#10;import okhttp3.MultipartBody;&#10;import okhttp3.OkHttpClient;&#10;import okhttp3.Request;&#10;import okhttp3.RequestBody;&#10;import okhttp3.Response;&#10;import org.jetbrains.annotations.NotNull;&#10;&#10;public class ApiClient {&#10;&#10;    private static final String BASE_URL = &quot;https://hjcdc.swuitapp.com/api&quot;; // adjust if needed&#10;    private static final MediaType JSON = MediaType.parse(&quot;application/json; charset=utf-8&quot;);&#10;&#10;    private final OkHttpClient client;&#10;    private final PrefsHelper prefsHelper;&#10;    private final Context appContext;&#10;&#10;    public ApiClient(Context context) {&#10;        client = new OkHttpClient.Builder()&#10;                .connectTimeout(30, TimeUnit.SECONDS)&#10;                .readTimeout(30, TimeUnit.SECONDS)&#10;                .build();&#10;&#10;        prefsHelper = new PrefsHelper(context);&#10;        appContext = context.getApplicationContext();&#10;    }&#10;&#10;    // ==============================&#10;    // LOGIN&#10;    // ==============================&#10;    public void studentLogin(String ph906, String birthday, ApiCallback callback) {&#10;        try {&#10;            JSONObject json = new JSONObject();&#10;            json.put(&quot;ph906&quot;, ph906);&#10;            json.put(&quot;birthday&quot;, birthday);&#10;&#10;            RequestBody body = RequestBody.create(json.toString(), JSON); // updated signature&#10;            Request request = new Request.Builder()&#10;                    .url(BASE_URL + &quot;/login.php&quot;)&#10;                    .addHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#10;                    .post(body)&#10;                    .build();&#10;&#10;            client.newCall(request).enqueue(new Callback() {&#10;                @Override public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                    callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;                }&#10;&#10;                @Override public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                    String responseBody = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                    try {&#10;                        JSONObject jsonResponse = new JSONObject(responseBody);&#10;                        if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                            // Save details into prefs&#10;                            prefsHelper.saveLoginInfo(&#10;                                    jsonResponse.optString(&quot;ph906&quot;),&#10;                                    jsonResponse.optString(&quot;token&quot;),&#10;                                    jsonResponse.optString(&quot;first_name&quot;, &quot;&quot;) + &quot; &quot; + jsonResponse.optString(&quot;last_name&quot;, &quot;&quot;),&#10;                                    jsonResponse.optBoolean(&quot;is_default_password&quot;, true)&#10;                            );&#10;                            prefsHelper.saveBirthday(jsonResponse.optString(&quot;birthday&quot;, birthday));&#10;                            boolean adult = isAdultFromBirthday(jsonResponse.optString(&quot;birthday&quot;, birthday));&#10;                            prefsHelper.saveVersion(adult ? &quot;adult&quot; : &quot;minor&quot;);&#10;&#10;                            callback.onSuccess(jsonResponse);&#10;                        } else {&#10;                            callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Login failed&quot;));&#10;                        }&#10;                    } catch (JSONException e) {&#10;                        callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                    }&#10;                }&#10;            });&#10;        } catch (JSONException e) {&#10;            callback.onError(&quot;JSON creation error: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    // ==============================&#10;    // CHANGE PASSWORD&#10;    // ==============================&#10;    public void changePassword(String currentPassword, String newPassword, ApiCallback callback) {&#10;        String token = prefsHelper.getToken();&#10;        if (token == null) {&#10;            callback.onError(&quot;Not logged in&quot;);&#10;            return;&#10;        }&#10;&#10;        try {&#10;            JSONObject json = new JSONObject();&#10;            json.put(&quot;current_password&quot;, currentPassword);&#10;            json.put(&quot;new_password&quot;, newPassword);&#10;&#10;            RequestBody body = RequestBody.create(json.toString(), JSON); // updated signature&#10;            Request request = new Request.Builder()&#10;                    .url(BASE_URL + &quot;/change_password.php&quot;)&#10;                    .addHeader(&quot;Authorization&quot;, token)&#10;                    .addHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#10;                    .post(body)&#10;                    .build();&#10;&#10;            client.newCall(request).enqueue(new Callback() {&#10;                @Override public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                    callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;                }&#10;&#10;                @Override public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                    String responseBody = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                    try {&#10;                        JSONObject jsonResponse = new JSONObject(responseBody);&#10;                        if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                            // Update prefs: no longer default password&#10;                            prefsHelper.saveLoginInfo(&#10;                                    prefsHelper.getPh906(),&#10;                                    prefsHelper.getToken(),&#10;                                    prefsHelper.getFullName(),&#10;                                    false&#10;                            );&#10;                            callback.onSuccess(jsonResponse);&#10;                        } else {&#10;                            callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Failed to change password&quot;));&#10;                        }&#10;                    } catch (JSONException e) {&#10;                        callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                    }&#10;                }&#10;            });&#10;        } catch (JSONException e) {&#10;            callback.onError(&quot;JSON creation error: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    // ==============================&#10;    // PROFILE&#10;    // ==============================&#10;    public void getMyProfile(ApiCallback callback) {&#10;        requestWithToken(&quot;/my_profile.php&quot;, &quot;GET&quot;, null, callback);&#10;    }&#10;&#10;    public void updateMyProfile(JSONObject payload, ApiCallback callback) {&#10;        requestWithToken(&quot;/my_profile.php&quot;, &quot;PUT&quot;, payload, callback);&#10;    }&#10;&#10;    private void requestWithToken(String endpoint, String method, JSONObject jsonBody, ApiCallback callback) {&#10;        String token = prefsHelper.getToken();&#10;        if (token == null) {&#10;            callback.onError(&quot;Not logged in&quot;);&#10;            return;&#10;        }&#10;&#10;        Request.Builder builder = new Request.Builder()&#10;                .url(BASE_URL + endpoint)&#10;                .addHeader(&quot;Authorization&quot;, token)&#10;                .addHeader(&quot;Accept&quot;, &quot;application/json&quot;);&#10;&#10;        if (&quot;POST&quot;.equalsIgnoreCase(method) || &quot;PUT&quot;.equalsIgnoreCase(method)) {&#10;            RequestBody body = jsonBody != null ?&#10;                    RequestBody.create(jsonBody.toString(), JSON) : // updated signature&#10;                    RequestBody.create(&quot;{}&quot;, JSON); // updated signature&#10;            builder.method(method, body);&#10;        } else {&#10;            builder.get();&#10;        }&#10;&#10;        client.newCall(builder.build()).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;            }&#10;            @Override&#10;            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String res = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject jsonResponse = new JSONObject(res);&#10;                    if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                        callback.onSuccess(jsonResponse);&#10;                    }&#10;                    else {&#10;                        callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Request failed&quot;));&#10;                    }&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    // ==============================&#10;    // SESSION HELPERS&#10;    // ==============================&#10;    public boolean isLoggedIn() { return prefsHelper.isLoggedIn(); }&#10;    public String getFullName() { return prefsHelper.getFullName(); }&#10;    public String getLoggedInStudentId() { return prefsHelper.getPh906(); }&#10;    public String getSavedVersion() { return prefsHelper.getVersion(); }&#10;    public void logout() { prefsHelper.clearAll(); }&#10;&#10;    // ==============================&#10;    // AGE CALCULATOR&#10;    // ==============================&#10;    private boolean isAdultFromBirthday(String birthday) {&#10;        try {&#10;            String[] parts = birthday.split(&quot;-&quot;);&#10;            int year = Integer.parseInt(parts[0]);&#10;            int month = Integer.parseInt(parts[1]);&#10;            int day = Integer.parseInt(parts[2]);&#10;&#10;            Calendar dob = Calendar.getInstance();&#10;            dob.set(year, month - 1, day);&#10;&#10;            Calendar today = Calendar.getInstance();&#10;            int age = today.get(Calendar.YEAR) - dob.get(Calendar.YEAR);&#10;            if (today.get(Calendar.DAY_OF_YEAR) &lt; dob.get(Calendar.DAY_OF_YEAR)) age--;&#10;&#10;            return age &gt;= 18;&#10;        } catch (Exception e) {&#10;            return false;&#10;        }&#10;    }&#10;&#10;    // ==============================&#10;    // GET MASTERLIST (LETTERS)&#10;    // ==============================&#10;    /**&#10;     * Fetches the student masterlist from the PHP endpoint.&#10;     * The endpoint should be get_students.php on your server.&#10;     * Returns the JSON response to the provided ApiCallback.&#10;     */&#10;    public void getMasterlist(final ApiCallback callback) {&#10;        String endpointUrl = BASE_URL + &quot;/get_students.php&quot;;&#10;&#10;        Request request = new Request.Builder()&#10;                .url(endpointUrl)&#10;                .get()&#10;                .build();&#10;&#10;        client.newCall(request).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String responseBody = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject jsonResponse = new JSONObject(responseBody);&#10;                    callback.onSuccess(jsonResponse);&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;    // ==============================&#10;// UPDATE MASTERLIST ENTRY&#10;// ==============================&#10;    /**&#10;     * Updates a specific masterlist record.&#10;     * @param studentId the ph906 / user id&#10;     * @param payload   the JSON with updated fields&#10;     * @param callback  your callback&#10;     */&#10;    public void updateMasterlist(String studentId, JSONObject payload, ApiCallback callback) {&#10;        String token = prefsHelper.getToken(); // if you require auth header&#10;        // build your endpoint URL; adjust .php vs REST as needed&#10;        String url = BASE_URL + &quot;/masterlist/&quot; + studentId;&#10;&#10;        RequestBody body = RequestBody.create(payload.toString(), JSON);&#10;        Request.Builder builder = new Request.Builder()&#10;                .url(url)&#10;                .addHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#10;                .put(body); // HTTP PUT&#10;&#10;        // include Authorization header if your backend expects token&#10;        if (token != null &amp;&amp; !token.isEmpty()) {&#10;            builder.addHeader(&quot;Authorization&quot;, token);&#10;        }&#10;&#10;        client.newCall(builder.build()).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Network error: &quot; + e.getMessage());&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String res = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject jsonResponse = new JSONObject(res);&#10;                    // Adjust according to your backend's success field&#10;                    if (&quot;success&quot;.equalsIgnoreCase(jsonResponse.optString(&quot;status&quot;))) {&#10;                        callback.onSuccess(jsonResponse);&#10;                    } else {&#10;                        callback.onError(jsonResponse.optString(&quot;message&quot;, &quot;Update failed&quot;));&#10;                    }&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Uploads a profile photo for the currently logged-in student.&#10;     * Endpoint: POST {BASE_URL}/upload_profile_photo.php&#10;     * Form fields: ph906 (digits only), photo (file)&#10;     * Returns JSON with {status, url}&#10;     */&#10;    public void uploadProfilePhoto(Uri imageUri, ApiCallback callback) {&#10;        if (imageUri == null) {&#10;            callback.onError(&quot;No image selected&quot;);&#10;            return;&#10;        }&#10;        String rawId = prefsHelper.getPh906();&#10;        if (rawId == null || rawId.trim().isEmpty()) {&#10;            callback.onError(&quot;No student id in session&quot;);&#10;            return;&#10;        }&#10;        String digits = rawId.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;);&#10;&#10;        String fileName = queryDisplayName(imageUri);&#10;        if (fileName == null || fileName.isEmpty()) fileName = &quot;profile.jpg&quot;;&#10;&#10;        RequestBody fileBody = new RequestBody() {&#10;            @Override public MediaType contentType() { return MediaType.parse(&quot;image/*&quot;); }&#10;            @Override public void writeTo(BufferedSink sink) throws IOException {&#10;                try (java.io.InputStream is = appContext.getContentResolver().openInputStream(imageUri)) {&#10;                    if (is == null) throw new IOException(&quot;Cannot open imageUri&quot;);&#10;                    byte[] buffer = new byte[8192];&#10;                    int read;&#10;                    while ((read = is.read(buffer)) != -1) {&#10;                        sink.write(buffer, 0, read);&#10;                    }&#10;                }&#10;            }&#10;        };&#10;&#10;        MultipartBody requestBody = new MultipartBody.Builder()&#10;                .setType(MultipartBody.FORM)&#10;                .addFormDataPart(&quot;ph906&quot;, digits)&#10;                .addFormDataPart(&quot;photo&quot;, fileName, fileBody)&#10;                .build();&#10;&#10;        Request.Builder reqBuilder = new Request.Builder()&#10;                .url(BASE_URL + &quot;/upload_profile_photo.php&quot;)&#10;                .post(requestBody)&#10;                .addHeader(&quot;Accept&quot;, &quot;application/json&quot;);&#10;        String token = prefsHelper.getToken();&#10;        if (token != null &amp;&amp; !token.isEmpty()) reqBuilder.addHeader(&quot;Authorization&quot;, token);&#10;&#10;        client.newCall(reqBuilder.build()).enqueue(new Callback() {&#10;            @Override public void onFailure(@NotNull Call call, @NotNull IOException e) {&#10;                callback.onError(&quot;Upload failed: &quot; + e.getMessage());&#10;            }&#10;            @Override public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {&#10;                String body = response.body() != null ? response.body().string() : &quot;&quot;;&#10;                try {&#10;                    JSONObject json = new JSONObject(body);&#10;                    if (&quot;success&quot;.equalsIgnoreCase(json.optString(&quot;status&quot;))) {&#10;                        callback.onSuccess(json);&#10;                    } else {&#10;                        callback.onError(json.optString(&quot;message&quot;, &quot;Upload failed&quot;));&#10;                    }&#10;                } catch (JSONException e) {&#10;                    callback.onError(&quot;JSON parse error: &quot; + e.getMessage());&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    private String queryDisplayName(Uri uri) {&#10;        try (android.database.Cursor c = appContext.getContentResolver().query(uri, null, null, null, null)) {&#10;            if (c != null &amp;&amp; c.moveToFirst()) {&#10;                int idx = c.getColumnIndex(OpenableColumns.DISPLAY_NAME);&#10;                if (idx &gt;= 0) return c.getString(idx);&#10;            }&#10;        } catch (Exception ignored) {}&#10;        return null;&#10;    }&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/edit_text_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/edit_text_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/colorWhite&quot; /&gt;&#10;    &lt;corners android:radius=&quot;8dp&quot; /&gt;&#10;    &lt;stroke android:width=&quot;1dp&quot; android:color=&quot;#E0E0E0&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/rounded_card.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/rounded_card.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#FFFFFF&quot; /&gt;&#10;    &lt;corners android:radius=&quot;12dp&quot; /&gt;&#10;    &lt;stroke android:width=&quot;1dp&quot; android:color=&quot;#E0E0E0&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_letters.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_letters.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_bg&quot;&#10;    tools:context=&quot;.ui.letters.LettersFragment&quot;&gt;&#10;&#10;    &lt;!-- Search Bar + Filter --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/layout_search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/btn_gradient&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etSearch&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:hint=&quot;Search by ID or name&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textColorHint=&quot;#AAAAAA&quot;&#10;            android:paddingStart=&quot;12dp&quot;&#10;            android:paddingEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnFilter&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;⚙&quot;&#10;            android:backgroundTint=&quot;@color/colorAccent&quot;&#10;            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Filter Buttons --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/filter_scroll&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/layout_search&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnAll&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ALL&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnPending&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PENDING&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnOnHand&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ON HAND&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnedIn&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURNED IN&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnInLate&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURN IN LATE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;!-- RecyclerView --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewLetters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/filter_scroll&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_bg&quot;&#10;    tools:context=&quot;.ui.letters.LettersFragment&quot;&gt;&#10;&#10;    &lt;!-- Search Bar + Filter --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/layout_search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/btn_gradient&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etSearch&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:hint=&quot;Search by ID or name&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textColorHint=&quot;#AAAAAA&quot;&#10;            android:paddingStart=&quot;12dp&quot;&#10;            android:paddingEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnFilter&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;⚙&quot;&#10;            android:backgroundTint=&quot;@color/colorAccent&quot;&#10;            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Filter Buttons --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/filter_scroll&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/layout_search&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnAll&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ALL&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnPending&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PENDING&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnOnHand&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ON HAND&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnedIn&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURNED IN&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnInLate&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURN IN LATE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;!-- RecyclerView --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewLetters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/filter_scroll&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;string name=&quot;dashboard&quot;&gt;DASHBOARD&lt;/string&gt;&#10;    &lt;string name=&quot;letters&quot;&gt;LETTERS&lt;/string&gt;&#10;    &lt;string name=&quot;username&quot;&gt;Rodney&lt;/string&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;HJCDC&lt;/string&gt;&#10;    &lt;string name=&quot;back_button_desc&quot;&gt;Back&lt;/string&gt;&#10;    &lt;string name=&quot;menu_button_desc&quot;&gt;Menu&lt;/string&gt;&#10;    &lt;string name=&quot;profile_picture_desc&quot;&gt;Profile picture&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_open&quot;&gt;Open navigation drawer&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_close&quot;&gt;Close navigation drawer&lt;/string&gt;&#10;    &lt;!-- Terms &amp; Service --&gt;&#10;    &lt;string name=&quot;terms_adult&quot;&gt;Full Terms &amp;amp; Service for adults…&lt;/string&gt;&#10;    &lt;string name=&quot;terms_minor&quot;&gt;Simplified Terms for minors…&lt;/string&gt;&#10;    &lt;!-- Privacy Policy --&gt;&#10;    &lt;string name=&quot;privacy_adult&quot;&gt;Privacy Policy (Adult) …&lt;/string&gt;&#10;    &lt;string name=&quot;privacy_minor&quot;&gt;Privacy Policy (Minor) …&lt;/string&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;resources&gt;&#13;&#10;    &lt;string name=&quot;dashboard&quot;&gt;DASHBOARD&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;letters&quot;&gt;LETTERS&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;username&quot;&gt;Rodney&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;app_name&quot;&gt;HJCDC&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;back_button_desc&quot;&gt;Back&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;menu_button_desc&quot;&gt;Menu&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;profile_picture_desc&quot;&gt;Profile picture&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;navigation_drawer_open&quot;&gt;Open navigation drawer&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;navigation_drawer_close&quot;&gt;Close navigation drawer&lt;/string&gt;&#13;&#10;    &lt;!-- Terms &amp; Service --&gt;&#13;&#10;    &lt;string name=&quot;terms_adult&quot;&gt;Full Terms &amp;amp; Service for adults…&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;terms_minor&quot;&gt;Simplified Terms for minors…&lt;/string&gt;&#13;&#10;    &lt;!-- Privacy Policy --&gt;&#13;&#10;    &lt;string name=&quot;privacy_adult&quot;&gt;Privacy Policy (Adult) …&lt;/string&gt;&#13;&#10;    &lt;string name=&quot;privacy_minor&quot;&gt;Privacy Policy (Minor) …&lt;/string&gt;&#13;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/styles.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/styles.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;!-- Card Styles --&gt;&#10;    &lt;style name=&quot;ProfileCard&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;16dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;16dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;16dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;@drawable/rounded_card&lt;/item&gt;&#10;        &lt;item name=&quot;android:elevation&quot;&gt;4dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;16dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Card Title Style --&gt;&#10;    &lt;style name=&quot;CardTitle&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;18sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#0A2A66&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;12dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Text Field Container Style --&gt;&#10;    &lt;style name=&quot;FieldContainer&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:orientation&quot;&gt;vertical&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Field Label Style --&gt;&#10;    &lt;style name=&quot;FieldLabel&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;12sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#666666&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;2dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Field Value Style (for profile view) --&gt;&#10;    &lt;style name=&quot;FieldValue&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;16sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#000000&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;8dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Edit Text Style (for edit profile) --&gt;&#10;    &lt;style name=&quot;ProfileEditText&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;12dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;@drawable/edit_text_background&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;12dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;16sp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Action Button Style --&gt;&#10;    &lt;style name=&quot;ActionButton&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;0dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_weight&quot;&gt;1&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@android:color/white&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;12dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;@drawable/rounded_button&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;!-- Card Styles --&gt;&#10;    &lt;style name=&quot;ProfileCard&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;16dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;16dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;16dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;@drawable/rounded_card&lt;/item&gt;&#10;        &lt;item name=&quot;android:elevation&quot;&gt;4dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;16dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Card Title Style --&gt;&#10;    &lt;style name=&quot;CardTitle&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#0A2A66&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;16dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Text Field Container Style --&gt;&#10;    &lt;style name=&quot;FieldContainer&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;12dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:orientation&quot;&gt;vertical&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;#FFFFFF&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Field Label Style --&gt;&#10;    &lt;style name=&quot;FieldLabel&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;14sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#0A2A66&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;4dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Field Value Style (for profile view) --&gt;&#10;    &lt;style name=&quot;FieldValue&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;16sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#000000&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;#F5F5F5&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Edit Text Style (for edit profile) --&gt;&#10;    &lt;style name=&quot;ProfileEditText&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;12dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;@drawable/edit_text_background&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#000000&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;16sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;4dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Action Button Style --&gt;&#10;    &lt;style name=&quot;ActionButton&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;0dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_weight&quot;&gt;1&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;#FFFFFF&lt;/item&gt;&#10;        &lt;item name=&quot;android:padding&quot;&gt;12dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;16sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>