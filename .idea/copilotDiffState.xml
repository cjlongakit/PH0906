<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/MainActivity.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.view.View;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.ActionBarDrawerToggle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.core.view.GravityCompat;&#10;import androidx.drawerlayout.widget.DrawerLayout;&#10;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;import com.example.ph906_spalshscreen.ui.about.AboutFragment;&#10;import com.example.ph906_spalshscreen.ui.letters.LettersFragment;&#10;import com.example.ph906_spalshscreen.ui.profile.ProfileFragment;&#10;import com.example.ph906_spalshscreen.ui.home.HomeFragment;&#10;import com.google.android.material.navigation.NavigationView;&#10;&#10;public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    private static final String TAG = &quot;MainActivity&quot;;&#10;&#10;    private DrawerLayout drawerLayout;&#10;    private NavigationView navigationView;&#10;    private Toolbar toolbar;&#10;    private ApiClient apiClient;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main); // make sure you have activity_main.xml&#10;&#10;        // Init ApiClient&#10;        apiClient = new ApiClient(this);&#10;&#10;        // Check login status&#10;        if (!apiClient.isLoggedIn()) {&#10;            startActivity(new Intent(this, LoginActivity.class));&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Setup Toolbar&#10;        toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        // Setup Drawer&#10;        drawerLayout = findViewById(R.id.drawer_layout);&#10;        navigationView = findViewById(R.id.nav_view);&#10;        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(&#10;                this, drawerLayout, toolbar,&#10;                R.string.navigation_drawer_open,&#10;                R.string.navigation_drawer_close&#10;        );&#10;        drawerLayout.addDrawerListener(toggle);&#10;        toggle.syncState();&#10;        navigationView.setNavigationItemSelectedListener(this);&#10;&#10;        // Update header with logged-in user info&#10;        updateNavigationHeader();&#10;&#10;        // --- HANDLE DASHBOARD BUTTONS ---&#10;        Button btnLetters = findViewById(R.id.btn_letters);&#10;        if (btnLetters != null) {&#10;            btnLetters.setOnClickListener(v -&gt; {&#10;                Log.d(TAG, &quot;Letters button clicked&quot;);&#10;                // Replace fragment instead of starting activity&#10;                getSupportFragmentManager()&#10;                        .beginTransaction()&#10;                        .replace(R.id.fragment_container, new LettersFragment())&#10;                        .addToBackStack(null)&#10;                        .commit();&#10;            });&#10;        }&#10;&#10;        // Ensure HomeFragment is loaded as the default fragment&#10;        if (savedInstanceState == null) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        }&#10;    }&#10;&#10;    private void updateNavigationHeader() {&#10;        if (navigationView != null) {&#10;            View header = null;&#10;            try { header = navigationView.getHeaderView(0); } catch (Exception ignored) {}&#10;            if (header == null) {&#10;                try { header = navigationView.inflateHeaderView(R.layout.nav_header); } catch (Exception ignored) {}&#10;            }&#10;            if (header != null) {&#10;                TextView tvName = header.findViewById(R.id.nav_username);&#10;                TextView tvId = header.findViewById(R.id.nav_student_id);&#10;&#10;                String fullName = apiClient.getFullName();&#10;                String studentId = apiClient.getLoggedInStudentId();&#10;&#10;                if (tvName != null) tvName.setText(fullName != null ? fullName : &quot;Unknown User&quot;);&#10;                if (tvId != null) tvId.setText(studentId != null ? &quot;ID: &quot; + studentId : &quot;ID: N/A&quot;);&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onNavigationItemSelected(@NonNull MenuItem item) {&#10;        int id = item.getItemId();&#10;&#10;        if (id == R.id.nav_home) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        } else if (id == R.id.nav_profile) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new ProfileFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_change_password) {&#10;            startActivity(new Intent(this, ChangePasswordActivity.class));&#10;        } else if (id == R.id.nav_about) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new AboutFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_logout) {&#10;            logoutUser();&#10;        }&#10;&#10;        drawerLayout.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;&#10;    private void logoutUser() {&#10;        apiClient.logout();&#10;        Intent intent = new Intent(MainActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {&#10;            drawerLayout.closeDrawer(GravityCompat.START);&#10;        } else {&#10;            super.onBackPressed();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateNavigationHeader();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.view.View;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.ActionBarDrawerToggle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.core.view.GravityCompat;&#10;import androidx.drawerlayout.widget.DrawerLayout;&#10;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;import com.example.ph906_spalshscreen.ui.about.AboutFragment;&#10;import com.example.ph906_spalshscreen.ui.letters.LettersFragment;&#10;import com.example.ph906_spalshscreen.ui.profile.ProfileFragment;&#10;import com.example.ph906_spalshscreen.ui.home.HomeFragment;&#10;import com.google.android.material.navigation.NavigationView;&#10;&#10;public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    private static final String TAG = &quot;MainActivity&quot;;&#10;&#10;    private DrawerLayout drawerLayout;&#10;    private NavigationView navigationView;&#10;    private Toolbar toolbar;&#10;    private ApiClient apiClient;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main); // make sure you have activity_main.xml&#10;&#10;        // Init ApiClient&#10;        apiClient = new ApiClient(this);&#10;&#10;        // Check login status&#10;        if (!apiClient.isLoggedIn()) {&#10;            startActivity(new Intent(this, LoginActivity.class));&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Setup Toolbar&#10;        toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        // Setup Drawer&#10;        drawerLayout = findViewById(R.id.drawer_layout);&#10;        navigationView = findViewById(R.id.nav_view);&#10;        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(&#10;                this, drawerLayout, toolbar,&#10;                R.string.navigation_drawer_open,&#10;                R.string.navigation_drawer_close&#10;        );&#10;        drawerLayout.addDrawerListener(toggle);&#10;        toggle.syncState();&#10;        navigationView.setNavigationItemSelectedListener(this);&#10;&#10;        // Update header with logged-in user info&#10;        updateNavigationHeader();&#10;&#10;        // --- HANDLE DASHBOARD BUTTONS ---&#10;        Button btnLetters = findViewById(R.id.btn_letters);&#10;        if (btnLetters != null) {&#10;            btnLetters.setOnClickListener(v -&gt; {&#10;                Log.d(TAG, &quot;Letters button clicked&quot;);&#10;                // Replace fragment instead of starting activity&#10;                getSupportFragmentManager()&#10;                        .beginTransaction()&#10;                        .replace(R.id.fragment_container, new LettersFragment())&#10;                        .addToBackStack(null)&#10;                        .commit();&#10;            });&#10;        }&#10;&#10;        // Ensure HomeFragment is loaded as the default fragment&#10;        if (savedInstanceState == null) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        }&#10;    }&#10;&#10;    private void updateNavigationHeader() {&#10;        if (navigationView != null) {&#10;            View header = null;&#10;            try { header = navigationView.getHeaderView(0); } catch (Exception ignored) {}&#10;            if (header == null) {&#10;                try { header = navigationView.inflateHeaderView(R.layout.nav_header); } catch (Exception ignored) {}&#10;            }&#10;            if (header != null) {&#10;                TextView tvName = header.findViewById(R.id.nav_username);&#10;                TextView tvId = header.findViewById(R.id.nav_student_id);&#10;&#10;                String fullName = apiClient.getFullName();&#10;                String studentId = apiClient.getLoggedInStudentId();&#10;&#10;                if (tvName != null) tvName.setText(fullName != null ? fullName : &quot;Unknown User&quot;);&#10;                if (tvId != null) tvId.setText(studentId != null ? &quot;ID: &quot; + studentId : &quot;ID: N/A&quot;);&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onNavigationItemSelected(@NonNull MenuItem item) {&#10;        int id = item.getItemId();&#10;&#10;        if (id == R.id.nav_home) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        } else if (id == R.id.nav_profile) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new ProfileFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_change_password) {&#10;            startActivity(new Intent(this, ChangePasswordActivity.class));&#10;        } else if (id == R.id.nav_about) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new AboutFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_logout) {&#10;            logoutUser();&#10;        }&#10;&#10;        drawerLayout.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;&#10;    private void logoutUser() {&#10;        apiClient.logout();&#10;        Intent intent = new Intent(MainActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {&#10;            drawerLayout.closeDrawer(GravityCompat.START);&#10;        } else {&#10;            super.onBackPressed();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateNavigationHeader();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/PrivacyActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/PrivacyActivity.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyAdultFragment;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyMinorFragment;&#10;&#10;public class PrivacyActivity extends AppCompatActivity {&#10;&#10;    private String version;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_privacy);&#10;&#10;        version = getIntent().getStringExtra(&quot;version&quot;);&#10;        if (version == null || version.trim().isEmpty()) version = &quot;minor&quot;;&#10;&#10;        Fragment fragment = &quot;minor&quot;.equals(version)&#10;                ? new DataPrivacyMinorFragment()&#10;                : new DataPrivacyAdultFragment();&#10;&#10;        getSupportFragmentManager().beginTransaction()&#10;                .replace(R.id.privacy_container, fragment)&#10;                .commit();&#10;    }&#10;&#10;    // Called by your fragment when user taps &quot;Agree&quot;&#10;    public void onAgreed() {&#10;        new PrefManager(this).acceptPrivacy(version, true);&#10;&#10;        startActivity(new Intent(this, MainActivity.class)&#10;                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));&#10;        finish();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyAdultFragment;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyMinorFragment;&#10;&#10;public class PrivacyActivity extends AppCompatActivity {&#10;&#10;    private String version;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_privacy);&#10;&#10;        version = getIntent().getStringExtra(&quot;version&quot;);&#10;        if (version == null || version.trim().isEmpty()) version = &quot;minor&quot;;&#10;&#10;        Fragment fragment = &quot;minor&quot;.equals(version)&#10;                ? new DataPrivacyMinorFragment()&#10;                : new DataPrivacyAdultFragment();&#10;&#10;        getSupportFragmentManager().beginTransaction()&#10;                .replace(R.id.privacy_container, fragment)&#10;                .commit();&#10;    }&#10;&#10;    // Called by your fragment when user taps &quot;Agree&quot;&#10;    public void onAgreed() {&#10;        new PrefManager(this).acceptPrivacy(version, true);&#10;&#10;        startActivity(new Intent(this, MainActivity.class)&#10;                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));&#10;        finish();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/ui/profile/EditProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/ui/profile/EditProfileActivity.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen.ui.profile;&#10;&#10;import android.Manifest;&#10;import android.content.Intent;&#10;import android.content.pm.PackageManager;&#10;import android.net.Uri;&#10;import android.os.Build;&#10;import android.os.Bundle;&#10;import android.os.Environment;&#10;import android.text.TextUtils;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.core.content.FileProvider;&#10;&#10;import com.android.volley.RequestQueue;&#10;import com.android.volley.toolbox.Volley;&#10;import com.bumptech.glide.Glide;&#10;import com.example.ph906_spalshscreen.PrefsHelper;&#10;import com.example.ph906_spalshscreen.R;&#10;import com.example.ph906_spalshscreen.api.ApiCallback;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.File;&#10;import java.text.SimpleDateFormat;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class EditProfileActivity extends AppCompatActivity {&#10;&#10;    private TextView tvUserId;&#10;    private ImageView imgProfileEdit;&#10;    private Button btnChoosePhoto, btnTakePhoto;&#10;    private EditText etFirstName, etLastName, etBirthdate, etSex, etAge, etNickname,&#10;            etMobileNumber, etEmail, etAddress, etCaseworkerAssigned, etGuardianName, etGuardianMobile,&#10;            etWaterBaptized, etTeacher;&#10;    private Button btnSave, btnCancel;&#10;&#10;    private String ph906;&#10;    private RequestQueue queue;&#10;    private PrefsHelper prefsHelper;&#10;&#10;    private Uri pendingPhotoUri = null; // staged photo until user taps Save&#10;    private Uri cameraTempUri = null;&#10;    private boolean isPhotoChanged = false;&#10;&#10;    private ApiClient apiClient;&#10;&#10;    // Launcher for picking image from gallery&#10;    private final ActivityResultLauncher&lt;String[]&gt; openDocumentLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.OpenDocument(), uri -&gt; {&#10;                if (uri != null) {&#10;                    try {&#10;                        // Persist read permission for the picked image&#10;                        getContentResolver().takePersistableUriPermission(&#10;                                uri,&#10;                                Intent.FLAG_GRANT_READ_URI_PERMISSION&#10;                        );&#10;                        pendingPhotoUri = uri;&#10;                        imgProfileEdit.setImageURI(uri);&#10;                        isPhotoChanged = true;&#10;                        // Save immediately so other screens see it&#10;                        if (prefsHelper != null) {&#10;                            prefsHelper.saveLocalPhotoUri(uri.toString());&#10;                        }&#10;                    } catch (Exception e) {&#10;                        Toast.makeText(this, &quot;Failed to access selected photo&quot;, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                }&#10;            });&#10;&#10;    // Launcher for taking picture with camera&#10;    private final ActivityResultLauncher&lt;Uri&gt; takePictureLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.TakePicture(), success -&gt; {&#10;                if (Boolean.TRUE.equals(success) &amp;&amp; cameraTempUri != null) {&#10;                    pendingPhotoUri = cameraTempUri;&#10;                    imgProfileEdit.setImageURI(cameraTempUri);&#10;                    isPhotoChanged = true;&#10;                    // Save immediately so other screens see it&#10;                    if (prefsHelper != null) {&#10;                        prefsHelper.saveLocalPhotoUri(cameraTempUri.toString());&#10;                    }&#10;                }&#10;            });&#10;&#10;    // Launcher for requesting permissions&#10;    private final ActivityResultLauncher&lt;String[]&gt; permissionLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.RequestMultiplePermissions(), permissions -&gt; {&#10;                boolean allGranted = true;&#10;                for (Boolean isGranted : permissions.values()) {&#10;                    if (!isGranted) {&#10;                        allGranted = false;&#10;                        break;&#10;                    }&#10;                }&#10;                if (allGranted) {&#10;                    // Permissions granted, proceed with photo operations&#10;                    handlePhotoOperation();&#10;                } else {&#10;                    Toast.makeText(this, &quot;Permissions required to handle photos&quot;, Toast.LENGTH_LONG).show();&#10;                }&#10;            });&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_profile);&#10;&#10;        apiClient = new ApiClient(this);&#10;        prefsHelper = new PrefsHelper(this);&#10;        queue = Volley.newRequestQueue(this);&#10;&#10;        initializeViews();&#10;        setupListeners();&#10;        loadExistingData(savedInstanceState);&#10;    }&#10;&#10;    private void initializeViews() {&#10;        tvUserId = findViewById(R.id.tv_user_id);&#10;        imgProfileEdit = findViewById(R.id.img_profile_edit);&#10;        btnChoosePhoto = findViewById(R.id.btnChoosePhoto);&#10;        btnTakePhoto = findViewById(R.id.btnTakePhoto);&#10;&#10;        etFirstName = findViewById(R.id.et_first_name);&#10;        etLastName = findViewById(R.id.et_last_name);&#10;        etBirthdate = findViewById(R.id.et_birthdate);&#10;        etSex = findViewById(R.id.et_sex);&#10;        etAge = findViewById(R.id.et_age);&#10;        etNickname = findViewById(R.id.et_nickname);&#10;        etMobileNumber = findViewById(R.id.et_mobile_number);&#10;        etEmail = findViewById(R.id.et_email);&#10;        etAddress = findViewById(R.id.et_address);&#10;        etCaseworkerAssigned = findViewById(R.id.et_caseworker_assigned);&#10;        etGuardianName = findViewById(R.id.et_guardian_name);&#10;        etGuardianMobile = findViewById(R.id.et_guardian_mobile);&#10;        etWaterBaptized = findViewById(R.id.et_water_baptized);&#10;        etTeacher = findViewById(R.id.et_teacher);&#10;&#10;        btnSave = findViewById(R.id.btnSave);&#10;        btnCancel = findViewById(R.id.btnCancel);&#10;    }&#10;&#10;    private void setupListeners() {&#10;        btnChoosePhoto.setOnClickListener(v -&gt; checkPermissionsAndProceed(&quot;gallery&quot;));&#10;        btnTakePhoto.setOnClickListener(v -&gt; checkPermissionsAndProceed(&quot;camera&quot;));&#10;        btnCancel.setOnClickListener(v -&gt; finish());&#10;        btnSave.setOnClickListener(v -&gt; saveAllChanges());&#10;    }&#10;&#10;    private void loadExistingData(Bundle savedInstanceState) {&#10;        // Load existing profile photo if any&#10;        ph906 = getIntent().getStringExtra(&quot;ph906Id&quot;);&#10;        if (ph906 == null) ph906 = &quot;&quot;;&#10;        tvUserId.setText(formatPh906(ph906));&#10;&#10;        String photoUrl = prefsHelper.getProfilePhotoUri();&#10;        if (!TextUtils.isEmpty(photoUrl)) {&#10;            try {&#10;                // Show last saved server url; use Glide to handle http/https&#10;                Glide.with(this)&#10;                        .load(photoUrl)&#10;                        .placeholder(R.drawable.account_circle)&#10;                        .error(R.drawable.account_circle)&#10;                        .into(imgProfileEdit);&#10;            } catch (Exception ignored) {}&#10;        }&#10;&#10;        // Only prefill from extras on first creation to avoid overriding user edits on rotate&#10;        if (savedInstanceState == null) {&#10;            setIfNonEmpty(etFirstName, getIntent().getStringExtra(&quot;firstName&quot;));&#10;            setIfNonEmpty(etLastName, getIntent().getStringExtra(&quot;lastName&quot;));&#10;            setIfNonEmpty(etBirthdate, getIntent().getStringExtra(&quot;birthdate&quot;));&#10;            setIfNonEmpty(etNickname, getIntent().getStringExtra(&quot;nickname&quot;));&#10;            setIfNonEmpty(etMobileNumber, getIntent().getStringExtra(&quot;mobile&quot;));&#10;            setIfNonEmpty(etEmail, getIntent().getStringExtra(&quot;email&quot;));&#10;            setIfNonEmpty(etAddress, getIntent().getStringExtra(&quot;address&quot;));&#10;            setIfNonEmpty(etGuardianName, getIntent().getStringExtra(&quot;guardian&quot;));&#10;            setIfNonEmpty(etGuardianMobile, getIntent().getStringExtra(&quot;guardianMobile&quot;));&#10;            setIfNonEmpty(etWaterBaptized, getIntent().getStringExtra(&quot;baptized&quot;));&#10;            setIfNonEmpty(etTeacher, getIntent().getStringExtra(&quot;teacher&quot;));&#10;            setIfNonEmpty(etSex, getIntent().getStringExtra(&quot;sex&quot;));&#10;            setIfNonEmpty(etAge, getIntent().getStringExtra(&quot;age&quot;));&#10;            setIfNonEmpty(etCaseworkerAssigned, getIntent().getStringExtra(&quot;caseworker&quot;));&#10;        }&#10;    }&#10;&#10;    private void setIfNonEmpty(EditText et, String value) {&#10;        if (et == null) return;&#10;        if (!TextUtils.isEmpty(value)) {&#10;            et.setText(value);&#10;        }&#10;    }&#10;&#10;    private void checkPermissionsAndProceed(String action) {&#10;        List&lt;String&gt; permissions = new ArrayList&lt;&gt;();&#10;&#10;        if (&quot;camera&quot;.equals(action)) {&#10;            permissions.add(Manifest.permission.CAMERA);&#10;        }&#10;&#10;        // For Android 13+ (API 33+)&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.TIRAMISU) {&#10;            permissions.add(Manifest.permission.READ_MEDIA_IMAGES);&#10;        } else {&#10;            // For Android 12 and below&#10;            permissions.add(Manifest.permission.READ_EXTERNAL_STORAGE);&#10;            if (Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.P) {&#10;                permissions.add(Manifest.permission.WRITE_EXTERNAL_STORAGE);&#10;            }&#10;        }&#10;&#10;        // Check if we have all permissions&#10;        boolean allGranted = true;&#10;        for (String permission : permissions) {&#10;            if (ContextCompat.checkSelfPermission(this, permission)&#10;                    != PackageManager.PERMISSION_GRANTED) {&#10;                allGranted = false;&#10;                break;&#10;            }&#10;        }&#10;&#10;        if (allGranted) {&#10;            if (&quot;camera&quot;.equals(action)) {&#10;                launchCamera();&#10;            } else {&#10;                openDocumentLauncher.launch(new String[]{&quot;image/*&quot;});&#10;            }&#10;        } else {&#10;            permissionLauncher.launch(permissions.toArray(new String[0]));&#10;        }&#10;    }&#10;&#10;    private void handlePhotoOperation() {&#10;        if (btnTakePhoto.isPressed()) {&#10;            launchCamera();&#10;        } else {&#10;            openDocumentLauncher.launch(new String[]{&quot;image/*&quot;});&#10;        }&#10;    }&#10;&#10;    private void launchCamera() {&#10;        try {&#10;            File picturesDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);&#10;            if (picturesDir == null) {&#10;                Toast.makeText(this, &quot;Storage not available&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;&#10;            // Create a unique filename using timestamp&#10;            String timeStamp = new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;, Locale.US).format(new Date());&#10;            File photoFile = new File(picturesDir, &quot;IMG_&quot; + timeStamp + &quot;.jpg&quot;);&#10;&#10;            // Get URI using FileProvider&#10;            cameraTempUri = FileProvider.getUriForFile(this,&#10;                    getPackageName() + &quot;.fileprovider&quot;,&#10;                    photoFile);&#10;&#10;            takePictureLauncher.launch(cameraTempUri);&#10;        } catch (Exception e) {&#10;            Toast.makeText(this, &quot;Camera error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;        }&#10;    }&#10;&#10;    private String formatPh906(String raw) {&#10;        String digits = raw == null ? &quot;&quot; : raw.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;);&#10;        return &quot;PH906-&quot; + digits;&#10;    }&#10;&#10;    private void saveAllChanges() {&#10;        if (isPhotoChanged &amp;&amp; pendingPhotoUri != null) {&#10;            // Upload photo first, then save profile&#10;            btnSave.setEnabled(false); // Prevent double-submission&#10;            Toast.makeText(this, &quot;Uploading photo...&quot;, Toast.LENGTH_SHORT).show();&#10;&#10;            apiClient.uploadProfilePhoto(pendingPhotoUri, new ApiCallback() {&#10;                @Override&#10;                public void onSuccess(JSONObject response) {&#10;                    // Save the photo URL from response&#10;                    String photoUrl = response.optString(&quot;url&quot;);&#10;                    if (!photoUrl.isEmpty()) {&#10;                        prefsHelper.saveServerPhotoUrl(photoUrl);&#10;&#10;                        // Show the server image now (bypass cache once)&#10;                        Glide.with(EditProfileActivity.this)&#10;                                .load(photoUrl + (photoUrl.contains(&quot;?&quot;) ? &quot;&amp;&quot; : &quot;?&quot;) + &quot;t=&quot; + System.currentTimeMillis())&#10;                                .placeholder(R.drawable.account_circle)&#10;                                .error(R.drawable.account_circle)&#10;                                .into(imgProfileEdit);&#10;                    }&#10;&#10;                    // Now save the rest of the profile&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this, &quot;Photo uploaded&quot;, Toast.LENGTH_SHORT).show();&#10;                        saveProfile();&#10;                    });&#10;                }&#10;&#10;                @Override&#10;                public void onError(String message) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this,&#10;                                &quot;Photo upload failed: &quot; + message, Toast.LENGTH_LONG).show();&#10;                        btnSave.setEnabled(true);&#10;                        // Proceed with saving other changes anyway&#10;                        saveProfile();&#10;                    });&#10;                }&#10;            });&#10;        } else {&#10;            // No photo change, just save profile&#10;            saveProfile();&#10;        }&#10;    }&#10;&#10;    private void saveProfile() {&#10;        try {&#10;            JSONObject payload = new JSONObject();&#10;            payload.put(&quot;first_name&quot;, etFirstName.getText().toString().trim());&#10;            payload.put(&quot;last_name&quot;, etLastName.getText().toString().trim());&#10;            payload.put(&quot;sex&quot;, etSex.getText().toString().trim());&#10;            payload.put(&quot;birthday&quot;, etBirthdate.getText().toString().trim());&#10;            payload.put(&quot;age&quot;, etAge.getText().toString().trim());&#10;            payload.put(&quot;caseworker_assigned&quot;, etCaseworkerAssigned.getText().toString().trim());&#10;            payload.put(&quot;teacher&quot;, etTeacher.getText().toString().trim());&#10;            payload.put(&quot;nickname&quot;, etNickname.getText().toString().trim());&#10;            payload.put(&quot;mobile_number&quot;, etMobileNumber.getText().toString().trim());&#10;            payload.put(&quot;email&quot;, etEmail.getText().toString().trim());&#10;            payload.put(&quot;address&quot;, etAddress.getText().toString().trim());&#10;            payload.put(&quot;guardian_name&quot;, etGuardianName.getText().toString().trim());&#10;            payload.put(&quot;guardian_mobile&quot;, etGuardianMobile.getText().toString().trim());&#10;            payload.put(&quot;water_baptized&quot;, etWaterBaptized.getText().toString().trim());&#10;&#10;            btnSave.setEnabled(false);&#10;&#10;            // Route through ApiClient (which has endpoint fallback logic)&#10;            apiClient.updateMyProfile(payload, new ApiCallback() {&#10;                @Override&#10;                public void onSuccess(JSONObject response) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this, &quot;Profile updated&quot;, Toast.LENGTH_SHORT).show();&#10;                        setResult(RESULT_OK);&#10;                        finish();&#10;                    });&#10;                }&#10;&#10;                @Override&#10;                public void onError(String message) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this, &quot;Save failed: &quot; + message, Toast.LENGTH_LONG).show();&#10;                        btnSave.setEnabled(true);&#10;                    });&#10;                }&#10;            });&#10;        } catch (JSONException e) {&#10;            Toast.makeText(this, &quot;Failed to prepare data: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;            btnSave.setEnabled(true);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        if (queue != null) {&#10;            queue.cancelAll(request -&gt; true);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen.ui.profile;&#10;&#10;import android.Manifest;&#10;import android.content.Intent;&#10;import android.content.pm.PackageManager;&#10;import android.net.Uri;&#10;import android.os.Build;&#10;import android.os.Bundle;&#10;import android.os.Environment;&#10;import android.text.TextUtils;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.core.content.FileProvider;&#10;&#10;import com.android.volley.RequestQueue;&#10;import com.android.volley.toolbox.Volley;&#10;import com.bumptech.glide.Glide;&#10;import com.example.ph906_spalshscreen.PrefsHelper;&#10;import com.example.ph906_spalshscreen.R;&#10;import com.example.ph906_spalshscreen.api.ApiCallback;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.io.File;&#10;import java.text.SimpleDateFormat;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class EditProfileActivity extends AppCompatActivity {&#10;&#10;    private TextView tvUserId;&#10;    private ImageView imgProfileEdit;&#10;    private Button btnChoosePhoto, btnTakePhoto;&#10;    private EditText etFirstName, etLastName, etBirthdate, etSex, etAge, etNickname,&#10;            etMobileNumber, etEmail, etAddress, etCaseworkerAssigned, etGuardianName, etGuardianMobile,&#10;            etWaterBaptized, etTeacher;&#10;    private Button btnSave, btnCancel;&#10;&#10;    private String ph906;&#10;    private RequestQueue queue;&#10;    private PrefsHelper prefsHelper;&#10;&#10;    private Uri pendingPhotoUri = null; // staged photo until user taps Save&#10;    private Uri cameraTempUri = null;&#10;    private boolean isPhotoChanged = false;&#10;&#10;    private ApiClient apiClient;&#10;&#10;    // Launcher for picking image from gallery&#10;    private final ActivityResultLauncher&lt;String[]&gt; openDocumentLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.OpenDocument(), uri -&gt; {&#10;                if (uri != null) {&#10;                    try {&#10;                        // Persist read permission for the picked image&#10;                        getContentResolver().takePersistableUriPermission(&#10;                                uri,&#10;                                Intent.FLAG_GRANT_READ_URI_PERMISSION&#10;                        );&#10;                        pendingPhotoUri = uri;&#10;                        imgProfileEdit.setImageURI(uri);&#10;                        isPhotoChanged = true;&#10;                        // Save immediately so other screens see it&#10;                        if (prefsHelper != null) {&#10;                            prefsHelper.saveLocalPhotoUri(uri.toString());&#10;                        }&#10;                    } catch (Exception e) {&#10;                        Toast.makeText(this, &quot;Failed to access selected photo&quot;, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                }&#10;            });&#10;&#10;    // Launcher for taking picture with camera&#10;    private final ActivityResultLauncher&lt;Uri&gt; takePictureLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.TakePicture(), success -&gt; {&#10;                if (Boolean.TRUE.equals(success) &amp;&amp; cameraTempUri != null) {&#10;                    pendingPhotoUri = cameraTempUri;&#10;                    imgProfileEdit.setImageURI(cameraTempUri);&#10;                    isPhotoChanged = true;&#10;                    // Save immediately so other screens see it&#10;                    if (prefsHelper != null) {&#10;                        prefsHelper.saveLocalPhotoUri(cameraTempUri.toString());&#10;                    }&#10;                }&#10;            });&#10;&#10;    // Launcher for requesting permissions&#10;    private final ActivityResultLauncher&lt;String[]&gt; permissionLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.RequestMultiplePermissions(), permissions -&gt; {&#10;                boolean allGranted = true;&#10;                for (Boolean isGranted : permissions.values()) {&#10;                    if (!isGranted) {&#10;                        allGranted = false;&#10;                        break;&#10;                    }&#10;                }&#10;                if (allGranted) {&#10;                    // Permissions granted, proceed with photo operations&#10;                    handlePhotoOperation();&#10;                } else {&#10;                    Toast.makeText(this, &quot;Permissions required to handle photos&quot;, Toast.LENGTH_LONG).show();&#10;                }&#10;            });&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_profile);&#10;&#10;        apiClient = new ApiClient(this);&#10;        prefsHelper = new PrefsHelper(this);&#10;        queue = Volley.newRequestQueue(this);&#10;&#10;        initializeViews();&#10;        setupListeners();&#10;        loadExistingData(savedInstanceState);&#10;    }&#10;&#10;    private void initializeViews() {&#10;        tvUserId = findViewById(R.id.tv_user_id);&#10;        imgProfileEdit = findViewById(R.id.img_profile_edit);&#10;        btnChoosePhoto = findViewById(R.id.btnChoosePhoto);&#10;        btnTakePhoto = findViewById(R.id.btnTakePhoto);&#10;&#10;        etFirstName = findViewById(R.id.et_first_name);&#10;        etLastName = findViewById(R.id.et_last_name);&#10;        etBirthdate = findViewById(R.id.et_birthdate);&#10;        etSex = findViewById(R.id.et_sex);&#10;        etAge = findViewById(R.id.et_age);&#10;        etNickname = findViewById(R.id.et_nickname);&#10;        etMobileNumber = findViewById(R.id.et_mobile_number);&#10;        etEmail = findViewById(R.id.et_email);&#10;        etAddress = findViewById(R.id.et_address);&#10;        etCaseworkerAssigned = findViewById(R.id.et_caseworker_assigned);&#10;        etGuardianName = findViewById(R.id.et_guardian_name);&#10;        etGuardianMobile = findViewById(R.id.et_guardian_mobile);&#10;        etWaterBaptized = findViewById(R.id.et_water_baptized);&#10;        etTeacher = findViewById(R.id.et_teacher);&#10;&#10;        btnSave = findViewById(R.id.btnSave);&#10;        btnCancel = findViewById(R.id.btnCancel);&#10;    }&#10;&#10;    private void setupListeners() {&#10;        btnChoosePhoto.setOnClickListener(v -&gt; checkPermissionsAndProceed(&quot;gallery&quot;));&#10;        btnTakePhoto.setOnClickListener(v -&gt; checkPermissionsAndProceed(&quot;camera&quot;));&#10;        btnCancel.setOnClickListener(v -&gt; finish());&#10;        btnSave.setOnClickListener(v -&gt; saveAllChanges());&#10;    }&#10;&#10;    private void loadExistingData(Bundle savedInstanceState) {&#10;        // Load existing profile photo if any&#10;        ph906 = getIntent().getStringExtra(&quot;ph906Id&quot;);&#10;        if (ph906 == null) ph906 = &quot;&quot;;&#10;        tvUserId.setText(formatPh906(ph906));&#10;&#10;        String photoUrl = prefsHelper.getProfilePhotoUri();&#10;        if (!TextUtils.isEmpty(photoUrl)) {&#10;            try {&#10;                // Show last saved server url; use Glide to handle http/https&#10;                Glide.with(this)&#10;                        .load(photoUrl)&#10;                        .placeholder(R.drawable.account_circle)&#10;                        .error(R.drawable.account_circle)&#10;                        .into(imgProfileEdit);&#10;            } catch (Exception ignored) {}&#10;        }&#10;&#10;        // Only prefill from extras on first creation to avoid overriding user edits on rotate&#10;        if (savedInstanceState == null) {&#10;            setIfNonEmpty(etFirstName, getIntent().getStringExtra(&quot;firstName&quot;));&#10;            setIfNonEmpty(etLastName, getIntent().getStringExtra(&quot;lastName&quot;));&#10;            setIfNonEmpty(etBirthdate, getIntent().getStringExtra(&quot;birthdate&quot;));&#10;            setIfNonEmpty(etNickname, getIntent().getStringExtra(&quot;nickname&quot;));&#10;            setIfNonEmpty(etMobileNumber, getIntent().getStringExtra(&quot;mobile&quot;));&#10;            setIfNonEmpty(etEmail, getIntent().getStringExtra(&quot;email&quot;));&#10;            setIfNonEmpty(etAddress, getIntent().getStringExtra(&quot;address&quot;));&#10;            setIfNonEmpty(etGuardianName, getIntent().getStringExtra(&quot;guardian&quot;));&#10;            setIfNonEmpty(etGuardianMobile, getIntent().getStringExtra(&quot;guardianMobile&quot;));&#10;            setIfNonEmpty(etWaterBaptized, getIntent().getStringExtra(&quot;baptized&quot;));&#10;            setIfNonEmpty(etTeacher, getIntent().getStringExtra(&quot;teacher&quot;));&#10;            setIfNonEmpty(etSex, getIntent().getStringExtra(&quot;sex&quot;));&#10;            setIfNonEmpty(etAge, getIntent().getStringExtra(&quot;age&quot;));&#10;            setIfNonEmpty(etCaseworkerAssigned, getIntent().getStringExtra(&quot;caseworker&quot;));&#10;        }&#10;    }&#10;&#10;    private void setIfNonEmpty(EditText et, String value) {&#10;        if (et == null) return;&#10;        if (!TextUtils.isEmpty(value)) {&#10;            et.setText(value);&#10;        }&#10;    }&#10;&#10;    private void checkPermissionsAndProceed(String action) {&#10;        List&lt;String&gt; permissions = new ArrayList&lt;&gt;();&#10;&#10;        if (&quot;camera&quot;.equals(action)) {&#10;            permissions.add(Manifest.permission.CAMERA);&#10;        }&#10;&#10;        // For Android 13+ (API 33+)&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.TIRAMISU) {&#10;            permissions.add(Manifest.permission.READ_MEDIA_IMAGES);&#10;        } else {&#10;            // For Android 12 and below&#10;            permissions.add(Manifest.permission.READ_EXTERNAL_STORAGE);&#10;            if (Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.P) {&#10;                permissions.add(Manifest.permission.WRITE_EXTERNAL_STORAGE);&#10;            }&#10;        }&#10;&#10;        // Check if we have all permissions&#10;        boolean allGranted = true;&#10;        for (String permission : permissions) {&#10;            if (ContextCompat.checkSelfPermission(this, permission)&#10;                    != PackageManager.PERMISSION_GRANTED) {&#10;                allGranted = false;&#10;                break;&#10;            }&#10;        }&#10;&#10;        if (allGranted) {&#10;            if (&quot;camera&quot;.equals(action)) {&#10;                launchCamera();&#10;            } else {&#10;                openDocumentLauncher.launch(new String[]{&quot;image/*&quot;});&#10;            }&#10;        } else {&#10;            permissionLauncher.launch(permissions.toArray(new String[0]));&#10;        }&#10;    }&#10;&#10;    private void handlePhotoOperation() {&#10;        if (btnTakePhoto.isPressed()) {&#10;            launchCamera();&#10;        } else {&#10;            openDocumentLauncher.launch(new String[]{&quot;image/*&quot;});&#10;        }&#10;    }&#10;&#10;    private void launchCamera() {&#10;        try {&#10;            File picturesDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);&#10;            if (picturesDir == null) {&#10;                Toast.makeText(this, &quot;Storage not available&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;&#10;            // Create a unique filename using timestamp&#10;            String timeStamp = new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;, Locale.US).format(new Date());&#10;            File photoFile = new File(picturesDir, &quot;IMG_&quot; + timeStamp + &quot;.jpg&quot;);&#10;&#10;            // Get URI using FileProvider&#10;            cameraTempUri = FileProvider.getUriForFile(this,&#10;                    getPackageName() + &quot;.fileprovider&quot;,&#10;                    photoFile);&#10;&#10;            takePictureLauncher.launch(cameraTempUri);&#10;        } catch (Exception e) {&#10;            Toast.makeText(this, &quot;Camera error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;        }&#10;    }&#10;&#10;    private String formatPh906(String raw) {&#10;        String digits = raw == null ? &quot;&quot; : raw.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;);&#10;        return &quot;PH906-&quot; + digits;&#10;    }&#10;&#10;    private void saveAllChanges() {&#10;        if (isPhotoChanged &amp;&amp; pendingPhotoUri != null) {&#10;            // Upload photo first, then save profile&#10;            btnSave.setEnabled(false); // Prevent double-submission&#10;            Toast.makeText(this, &quot;Uploading photo...&quot;, Toast.LENGTH_SHORT).show();&#10;&#10;            apiClient.uploadProfilePhoto(pendingPhotoUri, new ApiCallback() {&#10;                @Override&#10;                public void onSuccess(JSONObject response) {&#10;                    // Save the photo URL from response&#10;                    String photoUrl = response.optString(&quot;url&quot;);&#10;                    if (!photoUrl.isEmpty()) {&#10;                        prefsHelper.saveServerPhotoUrl(photoUrl);&#10;&#10;                        // Show the server image now (bypass cache once)&#10;                        Glide.with(EditProfileActivity.this)&#10;                                .load(photoUrl + (photoUrl.contains(&quot;?&quot;) ? &quot;&amp;&quot; : &quot;?&quot;) + &quot;t=&quot; + System.currentTimeMillis())&#10;                                .placeholder(R.drawable.account_circle)&#10;                                .error(R.drawable.account_circle)&#10;                                .into(imgProfileEdit);&#10;                    }&#10;&#10;                    // Now save the rest of the profile&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this, &quot;Photo uploaded&quot;, Toast.LENGTH_SHORT).show();&#10;                        saveProfile();&#10;                    });&#10;                }&#10;&#10;                @Override&#10;                public void onError(String message) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this,&#10;                                &quot;Photo upload failed: &quot; + message, Toast.LENGTH_LONG).show();&#10;                        btnSave.setEnabled(true);&#10;                        // Proceed with saving other changes anyway&#10;                        saveProfile();&#10;                    });&#10;                }&#10;            });&#10;        } else {&#10;            // No photo change, just save profile&#10;            saveProfile();&#10;        }&#10;    }&#10;&#10;    private void saveProfile() {&#10;        try {&#10;            JSONObject payload = new JSONObject();&#10;            payload.put(&quot;first_name&quot;, etFirstName.getText().toString().trim());&#10;            payload.put(&quot;last_name&quot;, etLastName.getText().toString().trim());&#10;            payload.put(&quot;sex&quot;, etSex.getText().toString().trim());&#10;            payload.put(&quot;birthday&quot;, etBirthdate.getText().toString().trim());&#10;            payload.put(&quot;age&quot;, etAge.getText().toString().trim());&#10;            payload.put(&quot;caseworker_assigned&quot;, etCaseworkerAssigned.getText().toString().trim());&#10;            payload.put(&quot;teacher&quot;, etTeacher.getText().toString().trim());&#10;            payload.put(&quot;nickname&quot;, etNickname.getText().toString().trim());&#10;            payload.put(&quot;mobile_number&quot;, etMobileNumber.getText().toString().trim());&#10;            payload.put(&quot;email&quot;, etEmail.getText().toString().trim());&#10;            payload.put(&quot;address&quot;, etAddress.getText().toString().trim());&#10;            payload.put(&quot;guardian_name&quot;, etGuardianName.getText().toString().trim());&#10;            payload.put(&quot;guardian_mobile&quot;, etGuardianMobile.getText().toString().trim());&#10;            payload.put(&quot;water_baptized&quot;, etWaterBaptized.getText().toString().trim());&#10;&#10;            btnSave.setEnabled(false);&#10;&#10;            // Route through ApiClient (which has endpoint fallback logic)&#10;            apiClient.updateMyProfile(payload, new ApiCallback() {&#10;                @Override&#10;                public void onSuccess(JSONObject response) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this, &quot;Profile updated&quot;, Toast.LENGTH_SHORT).show();&#10;                        setResult(RESULT_OK);&#10;                        finish();&#10;                    });&#10;                }&#10;&#10;                @Override&#10;                public void onError(String message) {&#10;                    runOnUiThread(() -&gt; {&#10;                        Toast.makeText(EditProfileActivity.this, &quot;Save failed: &quot; + message, Toast.LENGTH_LONG).show();&#10;                        btnSave.setEnabled(true);&#10;                    });&#10;                }&#10;            });&#10;        } catch (JSONException e) {&#10;            Toast.makeText(this, &quot;Failed to prepare data: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;            btnSave.setEnabled(true);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        if (queue != null) {&#10;            queue.cancelAll(request -&gt; true);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/ui/profile/ProfileFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/ui/profile/ProfileFragment.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen.ui.profile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.net.Uri;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.ph906_spalshscreen.PrefsHelper;&#10;import com.example.ph906_spalshscreen.R;&#10;import com.example.ph906_spalshscreen.api.ApiCallback;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;&#10;import org.json.JSONObject;&#10;&#10;public class ProfileFragment extends Fragment {&#10;&#10;    private TextView tvUserId, tvFirstName, tvLastName, tvBirthdate, tvNickname,&#10;            tvMobile, tvAddress, tvGuardian, tvGuardianMobile, tvBaptized, tvTeacher,&#10;            tvSex, tvCaseworker, tvAge, tvEmail;&#10;    private Button btnEdit;&#10;    private ImageView imgProfile;&#10;&#10;    private String ph906Raw;&#10;    private ApiClient apiClient;&#10;    private PrefsHelper prefs;&#10;&#10;    private static final String BASE = &quot;https://hjcdc.swuitapp.com&quot;; // for normalizing relative URLs&#10;&#10;    private final ActivityResultLauncher&lt;Intent&gt; editLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result -&gt; {&#10;                if (result.getResultCode() == Activity.RESULT_OK &amp;&amp; getContext() != null) {&#10;                    PrefsHelper prefs = new PrefsHelper(requireContext());&#10;                    String photoUri = prefs.getProfilePhotoUri();&#10;                    if (photoUri != null) {&#10;                        try { imgProfile.setImageURI(Uri.parse(photoUri)); } catch (Exception ignored) {}&#10;                    }&#10;                    loadProfile();&#10;                }&#10;            });&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,&#10;                             @Nullable Bundle savedInstanceState) {&#10;        View v = inflater.inflate(R.layout.fragment_profile, container, false);&#10;&#10;        imgProfile = v.findViewById(R.id.img_profile);&#10;        tvUserId = v.findViewById(R.id.tv_user_id);&#10;        tvFirstName = v.findViewById(R.id.tv_first_name);&#10;        tvLastName = v.findViewById(R.id.tv_last_name);&#10;        tvBirthdate = v.findViewById(R.id.tv_birthdate);&#10;        tvNickname = v.findViewById(R.id.tv_nickname);&#10;        tvMobile = v.findViewById(R.id.tv_mobile);&#10;        tvEmail = v.findViewById(R.id.tv_email);&#10;        tvAddress = v.findViewById(R.id.tv_address);&#10;        tvGuardian = v.findViewById(R.id.tv_guardian);&#10;        tvGuardianMobile = v.findViewById(R.id.tv_guardian_mobile);&#10;        tvBaptized = v.findViewById(R.id.tv_baptized);&#10;        tvTeacher = v.findViewById(R.id.tv_teacher);&#10;        tvSex = v.findViewById(R.id.tv_sex);&#10;        tvCaseworker = v.findViewById(R.id.tv_caseworker);&#10;        tvAge = v.findViewById(R.id.tv_age);&#10;        btnEdit = v.findViewById(R.id.btn_edit);&#10;&#10;        apiClient = new ApiClient(requireContext());&#10;        prefs = new PrefsHelper(requireContext());&#10;&#10;        ph906Raw = prefs.getPh906();&#10;        set(tvUserId, formatPh906(ph906Raw));&#10;&#10;        String savedUrl = prefs.getProfilePhotoUri();&#10;        if (savedUrl != null &amp;&amp; !savedUrl.isEmpty()) {&#10;            loadProfileImage(savedUrl, false);&#10;        } else {&#10;            Glide.with(this).load(R.drawable.account_circle).into(imgProfile);&#10;        }&#10;&#10;        btnEdit.setOnClickListener(view -&gt; {&#10;            Intent intent = new Intent(getActivity(), EditProfileActivity.class);&#10;            intent.putExtra(&quot;ph906Id&quot;, ph906Raw);&#10;            // Pass current visible values to avoid clearing in EditProfileActivity&#10;            intent.putExtra(&quot;firstName&quot;, safe(tvFirstName));&#10;            intent.putExtra(&quot;lastName&quot;, safe(tvLastName));&#10;            intent.putExtra(&quot;birthdate&quot;, safe(tvBirthdate));&#10;            intent.putExtra(&quot;nickname&quot;, safe(tvNickname));&#10;            intent.putExtra(&quot;mobile&quot;, safe(tvMobile));&#10;            intent.putExtra(&quot;email&quot;, safe(tvEmail));&#10;            intent.putExtra(&quot;address&quot;, safe(tvAddress));&#10;            intent.putExtra(&quot;guardian&quot;, safe(tvGuardian));&#10;            intent.putExtra(&quot;guardianMobile&quot;, safe(tvGuardianMobile));&#10;            intent.putExtra(&quot;baptized&quot;, safe(tvBaptized));&#10;            intent.putExtra(&quot;teacher&quot;, safe(tvTeacher));&#10;            intent.putExtra(&quot;sex&quot;, safe(tvSex));&#10;            intent.putExtra(&quot;age&quot;, safe(tvAge));&#10;            intent.putExtra(&quot;caseworker&quot;, safe(tvCaseworker));&#10;            editLauncher.launch(intent);&#10;        });&#10;&#10;        loadProfile();&#10;        return v;&#10;    }&#10;&#10;    private String formatPh906(String raw) {&#10;        if (raw == null || raw.isEmpty()) return &quot;PH906-&quot;;&#10;        String digits = raw.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;);&#10;        if (digits.length() &gt;= 1) return &quot;PH906-&quot; + digits;&#10;        return raw.startsWith(&quot;PH906-&quot;) ? raw : (&quot;PH906-&quot; + raw);&#10;    }&#10;&#10;    private void loadProfile() {&#10;        apiClient.getMyProfile(new ApiCallback() {&#10;            @Override&#10;            public void onSuccess(JSONObject response) {&#10;                if (!isAdded()) return;&#10;                requireActivity().runOnUiThread(() -&gt; handleProfileResponse(response));&#10;            }&#10;            @Override&#10;            public void onError(String message) {&#10;                if (!isAdded()) return;&#10;                requireActivity().runOnUiThread(() -&gt;&#10;                        Toast.makeText(getContext(), &quot;Load failed: &quot; + message, Toast.LENGTH_LONG).show()&#10;                );&#10;            }&#10;        });&#10;    }&#10;&#10;    private void handleProfileResponse(JSONObject response) {&#10;        try {&#10;            JSONObject obj = response;&#10;            if (response.has(&quot;data&quot;) &amp;&amp; response.opt(&quot;data&quot;) instanceof JSONObject) {&#10;                obj = response.getJSONObject(&quot;data&quot;);&#10;            }&#10;            // ALWAYS coerce to String; never pass numbers directly to setText(int)&#10;            set(tvFirstName, obj.optString(&quot;first_name&quot;, &quot;&quot;));&#10;            set(tvLastName,  obj.optString(&quot;last_name&quot;, &quot;&quot;));&#10;            set(tvBirthdate, obj.optString(&quot;birthday&quot;, &quot;&quot;));&#10;            set(tvNickname,  obj.optString(&quot;nickname&quot;, &quot;&quot;));&#10;&#10;            String mobile = firstNonEmpty(obj.optString(&quot;mobile_number&quot;, &quot;&quot;), obj.optString(&quot;mobile&quot;, &quot;&quot;));&#10;            set(tvMobile, mobile);&#10;            &#10;            set(tvEmail, obj.optString(&quot;email&quot;, &quot;&quot;));&#10;            set(tvAddress,  obj.optString(&quot;address&quot;, &quot;&quot;));&#10;            set(tvGuardian, obj.optString(&quot;guardian_name&quot;, &quot;&quot;));&#10;            set(tvGuardianMobile, obj.optString(&quot;guardian_mobile&quot;, &quot;&quot;));&#10;            set(tvBaptized, firstNonEmpty(obj.optString(&quot;water_baptized&quot;, &quot;&quot;), obj.optString(&quot;baptized&quot;, &quot;&quot;)));&#10;            set(tvTeacher,  obj.optString(&quot;teacher&quot;, &quot;&quot;));&#10;            set(tvSex,      obj.optString(&quot;sex&quot;, &quot;&quot;));&#10;            // age can be int or string; convert safely&#10;            String ageStr = obj.has(&quot;age&quot;) ? String.valueOf(obj.opt(&quot;age&quot;)) : &quot;&quot;;&#10;            set(tvAge, &quot;null&quot;.equalsIgnoreCase(ageStr) ? &quot;&quot; : ageStr);&#10;            set(tvCaseworker, obj.optString(&quot;caseworker_assigned&quot;, &quot;&quot;));&#10;&#10;            // If backend includes photo_url, prefer it and save&#10;            String apiPhotoUrl = obj.optString(&quot;photo_url&quot;, &quot;&quot;).trim();&#10;            if (!apiPhotoUrl.isEmpty()) {&#10;                String normalized = normalizeUrl(apiPhotoUrl);&#10;                prefs.saveProfilePhotoUri(normalized);&#10;                loadProfileImage(normalized, true); // cache-bust once&#10;            }&#10;        } catch (Exception e) {&#10;            Toast.makeText(getContext(), &quot;Parse error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;        }&#10;    }&#10;&#10;    private String normalizeUrl(String url) {&#10;        if (url == null) return null;&#10;        String u = url.trim();&#10;        if (u.startsWith(&quot;http://&quot;) || u.startsWith(&quot;https://&quot;)) return u;&#10;        // If it already includes /api/, keep it; else prepend base + &quot;/api&quot;&#10;        if (u.startsWith(&quot;/&quot;)) {&#10;            return (u.startsWith(&quot;/api/&quot;) ? (BASE + u) : (BASE + &quot;/api&quot; + u));&#10;        }&#10;        return BASE + &quot;/api/&quot; + u;&#10;    }&#10;&#10;    private String firstNonEmpty(String a, String b) {&#10;        if (a != null &amp;&amp; !a.trim().isEmpty()) return a;&#10;        return (b == null) ? &quot;&quot; : b;&#10;    }&#10;&#10;    private void loadProfileImage(String url, boolean bustCache) {&#10;        if (!isAdded()) return;&#10;        String normalized = normalizeUrl(url);&#10;        String toLoad = normalized;&#10;        if (bustCache) {&#10;            String sep = normalized.contains(&quot;?&quot;) ? &quot;&amp;&quot; : &quot;?&quot;;&#10;            toLoad = normalized + sep + &quot;t=&quot; + System.currentTimeMillis();&#10;        }&#10;        // Clear any pending request to avoid flicker/race&#10;        try { Glide.with(this).clear(imgProfile); } catch (Exception ignored) {}&#10;&#10;        try {&#10;            Glide.with(this)&#10;                    .load(toLoad)&#10;                    .placeholder(R.drawable.account_circle)&#10;                    .error(R.drawable.account_circle)&#10;                    .centerCrop()&#10;                    .diskCacheStrategy(bustCache ? DiskCacheStrategy.NONE : DiskCacheStrategy.AUTOMATIC)&#10;                    .skipMemoryCache(bustCache)&#10;                    .into(imgProfile);&#10;        } catch (IllegalStateException ignored) {&#10;            // Fragment might be in transition; skip&#10;        }&#10;    }&#10;&#10;    // Safe setter: coerce any value to string and coalesce nulls to &quot;&quot;&#10;    private void set(TextView v, Object val) {&#10;        if (v == null) return;&#10;        String s;&#10;        if (val == null) {&#10;            s = &quot;&quot;;&#10;        } else {&#10;            s = String.valueOf(val);&#10;            if (&quot;null&quot;.equalsIgnoreCase(s)) s = &quot;&quot;;&#10;        }&#10;        v.setText(s);&#10;    }&#10;&#10;    private String safe(TextView tv) {&#10;        return tv != null &amp;&amp; tv.getText() != null ? tv.getText().toString() : &quot;&quot;;&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen.ui.profile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.net.Uri;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.engine.DiskCacheStrategy;&#10;import com.example.ph906_spalshscreen.PrefsHelper;&#10;import com.example.ph906_spalshscreen.R;&#10;import com.example.ph906_spalshscreen.api.ApiCallback;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;&#10;import org.json.JSONObject;&#10;&#10;public class ProfileFragment extends Fragment {&#10;&#10;    private TextView tvUserId, tvFirstName, tvLastName, tvBirthdate, tvNickname,&#10;            tvMobile, tvAddress, tvGuardian, tvGuardianMobile, tvBaptized, tvTeacher,&#10;            tvSex, tvCaseworker, tvAge, tvEmail;&#10;    private Button btnEdit;&#10;    private ImageView imgProfile;&#10;&#10;    private String ph906Raw;&#10;    private ApiClient apiClient;&#10;    private PrefsHelper prefs;&#10;&#10;    private static final String BASE = &quot;https://hjcdc.swuitapp.com&quot;; // for normalizing relative URLs&#10;&#10;    private final ActivityResultLauncher&lt;Intent&gt; editLauncher =&#10;            registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result -&gt; {&#10;                if (result.getResultCode() == Activity.RESULT_OK &amp;&amp; getContext() != null) {&#10;                    PrefsHelper prefs = new PrefsHelper(requireContext());&#10;                    String photoUri = prefs.getProfilePhotoUri();&#10;                    if (photoUri != null) {&#10;                        try { imgProfile.setImageURI(Uri.parse(photoUri)); } catch (Exception ignored) {}&#10;                    }&#10;                    loadProfile();&#10;                }&#10;            });&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,&#10;                             @Nullable Bundle savedInstanceState) {&#10;        View v = inflater.inflate(R.layout.fragment_profile, container, false);&#10;&#10;        imgProfile = v.findViewById(R.id.img_profile);&#10;        tvUserId = v.findViewById(R.id.tv_user_id);&#10;        tvFirstName = v.findViewById(R.id.tv_first_name);&#10;        tvLastName = v.findViewById(R.id.tv_last_name);&#10;        tvBirthdate = v.findViewById(R.id.tv_birthdate);&#10;        tvNickname = v.findViewById(R.id.tv_nickname);&#10;        tvMobile = v.findViewById(R.id.tv_mobile);&#10;        tvEmail = v.findViewById(R.id.tv_email);&#10;        tvAddress = v.findViewById(R.id.tv_address);&#10;        tvGuardian = v.findViewById(R.id.tv_guardian);&#10;        tvGuardianMobile = v.findViewById(R.id.tv_guardian_mobile);&#10;        tvBaptized = v.findViewById(R.id.tv_baptized);&#10;        tvTeacher = v.findViewById(R.id.tv_teacher);&#10;        tvSex = v.findViewById(R.id.tv_sex);&#10;        tvCaseworker = v.findViewById(R.id.tv_caseworker);&#10;        tvAge = v.findViewById(R.id.tv_age);&#10;        btnEdit = v.findViewById(R.id.btn_edit);&#10;&#10;        apiClient = new ApiClient(requireContext());&#10;        prefs = new PrefsHelper(requireContext());&#10;&#10;        ph906Raw = prefs.getPh906();&#10;        set(tvUserId, formatPh906(ph906Raw));&#10;&#10;        String savedUrl = prefs.getProfilePhotoUri();&#10;        if (savedUrl != null &amp;&amp; !savedUrl.isEmpty()) {&#10;            loadProfileImage(savedUrl, false);&#10;        } else {&#10;            Glide.with(this).load(R.drawable.account_circle).into(imgProfile);&#10;        }&#10;&#10;        btnEdit.setOnClickListener(view -&gt; {&#10;            Intent intent = new Intent(getActivity(), EditProfileActivity.class);&#10;            intent.putExtra(&quot;ph906Id&quot;, ph906Raw);&#10;            // Pass current visible values to avoid clearing in EditProfileActivity&#10;            intent.putExtra(&quot;firstName&quot;, safe(tvFirstName));&#10;            intent.putExtra(&quot;lastName&quot;, safe(tvLastName));&#10;            intent.putExtra(&quot;birthdate&quot;, safe(tvBirthdate));&#10;            intent.putExtra(&quot;nickname&quot;, safe(tvNickname));&#10;            intent.putExtra(&quot;mobile&quot;, safe(tvMobile));&#10;            intent.putExtra(&quot;email&quot;, safe(tvEmail));&#10;            intent.putExtra(&quot;address&quot;, safe(tvAddress));&#10;            intent.putExtra(&quot;guardian&quot;, safe(tvGuardian));&#10;            intent.putExtra(&quot;guardianMobile&quot;, safe(tvGuardianMobile));&#10;            intent.putExtra(&quot;baptized&quot;, safe(tvBaptized));&#10;            intent.putExtra(&quot;teacher&quot;, safe(tvTeacher));&#10;            intent.putExtra(&quot;sex&quot;, safe(tvSex));&#10;            intent.putExtra(&quot;age&quot;, safe(tvAge));&#10;            intent.putExtra(&quot;caseworker&quot;, safe(tvCaseworker));&#10;            editLauncher.launch(intent);&#10;        });&#10;&#10;        loadProfile();&#10;        return v;&#10;    }&#10;&#10;    private String formatPh906(String raw) {&#10;        if (raw == null || raw.isEmpty()) return &quot;PH906-&quot;;&#10;        String digits = raw.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;);&#10;        if (digits.length() &gt;= 1) return &quot;PH906-&quot; + digits;&#10;        return raw.startsWith(&quot;PH906-&quot;) ? raw : (&quot;PH906-&quot; + raw);&#10;    }&#10;&#10;    private void loadProfile() {&#10;        apiClient.getMyProfile(new ApiCallback() {&#10;            @Override&#10;            public void onSuccess(JSONObject response) {&#10;                if (!isAdded()) return;&#10;                requireActivity().runOnUiThread(() -&gt; handleProfileResponse(response));&#10;            }&#10;            @Override&#10;            public void onError(String message) {&#10;                if (!isAdded()) return;&#10;                requireActivity().runOnUiThread(() -&gt;&#10;                        Toast.makeText(getContext(), &quot;Load failed: &quot; + message, Toast.LENGTH_LONG).show()&#10;                );&#10;            }&#10;        });&#10;    }&#10;&#10;    private void handleProfileResponse(JSONObject response) {&#10;        try {&#10;            JSONObject obj = response;&#10;            if (response.has(&quot;data&quot;) &amp;&amp; response.opt(&quot;data&quot;) instanceof JSONObject) {&#10;                obj = response.getJSONObject(&quot;data&quot;);&#10;            }&#10;            // ALWAYS coerce to String; never pass numbers directly to setText(int)&#10;            set(tvFirstName, obj.optString(&quot;first_name&quot;, &quot;&quot;));&#10;            set(tvLastName,  obj.optString(&quot;last_name&quot;, &quot;&quot;));&#10;            set(tvBirthdate, obj.optString(&quot;birthday&quot;, &quot;&quot;));&#10;            set(tvNickname,  obj.optString(&quot;nickname&quot;, &quot;&quot;));&#10;&#10;            String mobile = firstNonEmpty(obj.optString(&quot;mobile_number&quot;, &quot;&quot;), obj.optString(&quot;mobile&quot;, &quot;&quot;));&#10;            set(tvMobile, mobile);&#10;            &#10;            set(tvEmail, obj.optString(&quot;email&quot;, &quot;&quot;));&#10;            set(tvAddress,  obj.optString(&quot;address&quot;, &quot;&quot;));&#10;            set(tvGuardian, obj.optString(&quot;guardian_name&quot;, &quot;&quot;));&#10;            set(tvGuardianMobile, obj.optString(&quot;guardian_mobile&quot;, &quot;&quot;));&#10;            set(tvBaptized, firstNonEmpty(obj.optString(&quot;water_baptized&quot;, &quot;&quot;), obj.optString(&quot;baptized&quot;, &quot;&quot;)));&#10;            set(tvTeacher,  obj.optString(&quot;teacher&quot;, &quot;&quot;));&#10;            set(tvSex,      obj.optString(&quot;sex&quot;, &quot;&quot;));&#10;            // age can be int or string; convert safely&#10;            String ageStr = obj.has(&quot;age&quot;) ? String.valueOf(obj.opt(&quot;age&quot;)) : &quot;&quot;;&#10;            set(tvAge, &quot;null&quot;.equalsIgnoreCase(ageStr) ? &quot;&quot; : ageStr);&#10;            set(tvCaseworker, obj.optString(&quot;caseworker_assigned&quot;, &quot;&quot;));&#10;&#10;            // If backend includes photo_url, prefer it and save&#10;            String apiPhotoUrl = obj.optString(&quot;photo_url&quot;, &quot;&quot;).trim();&#10;            if (!apiPhotoUrl.isEmpty()) {&#10;                String normalized = normalizeUrl(apiPhotoUrl);&#10;                prefs.saveProfilePhotoUri(normalized);&#10;                loadProfileImage(normalized, true); // cache-bust once&#10;            }&#10;        } catch (Exception e) {&#10;            Toast.makeText(getContext(), &quot;Parse error: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;        }&#10;    }&#10;&#10;    private String normalizeUrl(String url) {&#10;        if (url == null) return null;&#10;        String u = url.trim();&#10;        if (u.startsWith(&quot;http://&quot;) || u.startsWith(&quot;https://&quot;)) return u;&#10;        // If it already includes /api/, keep it; else prepend base + &quot;/api&quot;&#10;        if (u.startsWith(&quot;/&quot;)) {&#10;            return (u.startsWith(&quot;/api/&quot;) ? (BASE + u) : (BASE + &quot;/api&quot; + u));&#10;        }&#10;        return BASE + &quot;/api/&quot; + u;&#10;    }&#10;&#10;    private String firstNonEmpty(String a, String b) {&#10;        if (a != null &amp;&amp; !a.trim().isEmpty()) return a;&#10;        return (b == null) ? &quot;&quot; : b;&#10;    }&#10;&#10;    private void loadProfileImage(String url, boolean bustCache) {&#10;        if (!isAdded()) return;&#10;        String normalized = normalizeUrl(url);&#10;        String toLoad = normalized;&#10;        if (bustCache) {&#10;            String sep = normalized.contains(&quot;?&quot;) ? &quot;&amp;&quot; : &quot;?&quot;;&#10;            toLoad = normalized + sep + &quot;t=&quot; + System.currentTimeMillis();&#10;        }&#10;        // Clear any pending request to avoid flicker/race&#10;        try { Glide.with(this).clear(imgProfile); } catch (Exception ignored) {}&#10;&#10;        try {&#10;            Glide.with(this)&#10;                    .load(toLoad)&#10;                    .placeholder(R.drawable.account_circle)&#10;                    .error(R.drawable.account_circle)&#10;                    .centerCrop()&#10;                    .diskCacheStrategy(bustCache ? DiskCacheStrategy.NONE : DiskCacheStrategy.AUTOMATIC)&#10;                    .skipMemoryCache(bustCache)&#10;                    .into(imgProfile);&#10;        } catch (IllegalStateException ignored) {&#10;            // Fragment might be in transition; skip&#10;        }&#10;    }&#10;&#10;    // Safe setter: coerce any value to string and coalesce nulls to &quot;&quot;&#10;    private void set(TextView v, Object val) {&#10;        if (v == null) return;&#10;        String s;&#10;        if (val == null) {&#10;            s = &quot;&quot;;&#10;        } else {&#10;            s = String.valueOf(val);&#10;            if (&quot;null&quot;.equalsIgnoreCase(s)) s = &quot;&quot;;&#10;        }&#10;        v.setText(s);&#10;    }&#10;&#10;    private String safe(TextView tv) {&#10;        return tv != null &amp;&amp; tv.getText() != null ? tv.getText().toString() : &quot;&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/login_gradient&quot; &gt;&#10;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageView2&quot;&#10;        android:layout_width=&quot;152dp&quot;&#10;        android:layout_height=&quot;150dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.061&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintVertical_bias=&quot;0.027&quot;&#10;        app:srcCompat=&quot;@drawable/ph906&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/textView4&quot;&#10;        android:layout_width=&quot;133dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;228dp&quot;&#10;        android:text=&quot;Hello,&quot;&#10;        android:textAlignment=&quot;viewStart&quot;&#10;        android:textSize=&quot;40dp&quot;&#10;        android:textColor=&quot;#FFD700&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.291&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/textView5&quot;&#10;        android:layout_width=&quot;169dp&quot;&#10;        android:layout_height=&quot;62dp&quot;&#10;        android:text=&quot;PH906&quot;&#10;        android:textColor=&quot;#FFD700&quot;&#10;        android:textAlignment=&quot;viewStart&quot;&#10;        android:textSize=&quot;40dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.334&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/textView4&quot; /&gt;&#10;&#10;    &lt;!-- Gradient Box for Username, Password, Button, Forgot --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/loginBox&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:background=&quot;@drawable/login_gradient&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/textView5&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        android:layout_marginHorizontal=&quot;40dp&quot;&#10;        android:layout_marginTop=&quot;24dp&quot;&#10;        android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;        &lt;!-- PH906 field with static prefix and clear icon --&gt;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:id=&quot;@+id/tilPh906&quot;&#10;            style=&quot;@style/Widget.MaterialComponents.TextInputLayout.FilledBox&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:boxBackgroundColor=&quot;@color/colorWhite&quot;&#10;            app:boxBackgroundMode=&quot;filled&quot;&#10;            app:prefixText=&quot;PH906-&quot;&#10;            app:prefixTextColor=&quot;@color/colorText&quot;&#10;            app:endIconMode=&quot;clear_text&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/etPh906&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:hint=&quot;XXXX&quot;&#10;                android:inputType=&quot;number&quot;&#10;                android:digits=&quot;0123456789&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:textColor=&quot;@color/colorText&quot;&#10;                android:textColorHint=&quot;#808080&quot;/&gt;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;!-- Password with visibility toggle --&gt;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:id=&quot;@+id/tilPassword&quot;&#10;            style=&quot;@style/Widget.MaterialComponents.TextInputLayout.FilledBox&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:boxBackgroundColor=&quot;@color/colorWhite&quot;&#10;            app:boxBackgroundMode=&quot;filled&quot;&#10;            app:endIconMode=&quot;password_toggle&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/etBirthday&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:hint=&quot;Password&quot;&#10;                android:inputType=&quot;textPassword&quot;&#10;                android:digits=&quot;0123456789-/&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:textColor=&quot;@color/colorText&quot;&#10;                android:textColorHint=&quot;#808080&quot;/&gt;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;!-- Login Button --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnLogin&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;53dp&quot;&#10;            android:text=&quot;Continue&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:background=&quot;@drawable/btn_gradient&quot;&#10;            android:layout_marginTop=&quot;20dp&quot;/&gt;&#10;&#10;        &lt;!-- Forgot Password --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvForgotPassword&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Forgot Your Password?&quot;&#10;            android:textAlignment=&quot;center&quot;&#10;            android:textColor=&quot;#E0E0E0&quot;&#10;            android:layout_marginTop=&quot;12dp&quot;&#10;            android:layout_gravity=&quot;center_horizontal&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/login_gradient&quot; &gt;&#10;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageView2&quot;&#10;        android:layout_width=&quot;152dp&quot;&#10;        android:layout_height=&quot;150dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.061&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintVertical_bias=&quot;0.027&quot;&#10;        app:srcCompat=&quot;@drawable/ph906&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/textView4&quot;&#10;        android:layout_width=&quot;133dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;228dp&quot;&#10;        android:text=&quot;Hello,&quot;&#10;        android:textAlignment=&quot;viewStart&quot;&#10;        android:textSize=&quot;40dp&quot;&#10;        android:textColor=&quot;#FFD700&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.291&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/textView5&quot;&#10;        android:layout_width=&quot;169dp&quot;&#10;        android:layout_height=&quot;62dp&quot;&#10;        android:text=&quot;PH906&quot;&#10;        android:textColor=&quot;#FFD700&quot;&#10;        android:textAlignment=&quot;viewStart&quot;&#10;        android:textSize=&quot;40dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.334&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/textView4&quot; /&gt;&#10;&#10;    &lt;!-- Gradient Box for Username, Password, Button, Forgot --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/loginBox&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:background=&quot;@drawable/login_gradient&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/textView5&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        android:layout_marginHorizontal=&quot;40dp&quot;&#10;        android:layout_marginTop=&quot;24dp&quot;&#10;        android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;        &lt;!-- PH906 field with static prefix and clear icon --&gt;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:id=&quot;@+id/tilPh906&quot;&#10;            style=&quot;@style/Widget.MaterialComponents.TextInputLayout.FilledBox&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:boxBackgroundColor=&quot;@color/colorWhite&quot;&#10;            app:boxBackgroundMode=&quot;filled&quot;&#10;            app:prefixText=&quot;PH906-&quot;&#10;            app:prefixTextColor=&quot;@color/colorText&quot;&#10;            app:endIconMode=&quot;clear_text&quot;&#10;            android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/etPh906&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:hint=&quot;XXXX&quot;&#10;                android:inputType=&quot;number&quot;&#10;                android:digits=&quot;0123456789&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:textColor=&quot;@color/colorText&quot;&#10;                android:textColorHint=&quot;#808080&quot;/&gt;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;!-- Password with visibility toggle --&gt;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:id=&quot;@+id/tilPassword&quot;&#10;            style=&quot;@style/Widget.MaterialComponents.TextInputLayout.FilledBox&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:boxBackgroundColor=&quot;@color/colorWhite&quot;&#10;            app:boxBackgroundMode=&quot;filled&quot;&#10;            app:endIconMode=&quot;password_toggle&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/etBirthday&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:hint=&quot;Password&quot;&#10;                android:inputType=&quot;textPassword&quot;&#10;                android:digits=&quot;0123456789-/&quot;&#10;                android:maxLines=&quot;1&quot;&#10;                android:textColor=&quot;@color/colorText&quot;&#10;                android:textColorHint=&quot;#808080&quot;/&gt;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;!-- Login Button --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnLogin&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;53dp&quot;&#10;            android:text=&quot;Continue&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:background=&quot;@drawable/btn_gradient&quot;&#10;            android:layout_marginTop=&quot;20dp&quot;/&gt;&#10;&#10;        &lt;!-- Forgot Password --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvForgotPassword&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Forgot Your Password?&quot;&#10;            android:textAlignment=&quot;center&quot;&#10;            android:textColor=&quot;#E0E0E0&quot;&#10;            android:layout_marginTop=&quot;12dp&quot;&#10;            android:layout_gravity=&quot;center_horizontal&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_letters.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_letters.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_bg&quot;&#10;    tools:context=&quot;.ui.letters.LettersFragment&quot;&gt;&#10;&#10;    &lt;!-- Search Bar + Filter --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/layout_search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/btn_gradient&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etSearch&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:hint=&quot;Search by ID or name&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textColorHint=&quot;#AAAAAA&quot;&#10;            android:paddingStart=&quot;12dp&quot;&#10;            android:paddingEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnFilter&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;⚙&quot;&#10;            android:backgroundTint=&quot;@color/colorAccent&quot;&#10;            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Filter Buttons --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/filter_scroll&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/layout_search&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnAll&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ALL&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnPending&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PENDING&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnOnHand&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ON HAND&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnedIn&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURNED IN&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnInLate&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURN IN LATE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;!-- RecyclerView --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewLetters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/filter_scroll&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_bg&quot;&#10;    tools:context=&quot;.ui.letters.LettersFragment&quot;&gt;&#10;&#10;    &lt;!-- Search Bar + Filter --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/layout_search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/btn_gradient&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etSearch&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:hint=&quot;Search by ID or name&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textColorHint=&quot;#AAAAAA&quot;&#10;            android:paddingStart=&quot;12dp&quot;&#10;            android:paddingEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnFilter&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;⚙&quot;&#10;            android:backgroundTint=&quot;@color/colorAccent&quot;&#10;            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Filter Buttons --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/filter_scroll&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/layout_search&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnAll&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ALL&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnPending&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PENDING&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnOnHand&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ON HAND&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnedIn&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURNED IN&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnInLate&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURN IN LATE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;!-- RecyclerView --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewLetters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/filter_scroll&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;string name=&quot;dashboard&quot;&gt;DASHBOARD&lt;/string&gt;&#10;    &lt;string name=&quot;letters&quot;&gt;LETTERS&lt;/string&gt;&#10;    &lt;string name=&quot;username&quot;&gt;Rodney&lt;/string&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Hello, PH0906!&lt;/string&gt;&#10;    &lt;string name=&quot;back_button_desc&quot;&gt;Back&lt;/string&gt;&#10;    &lt;string name=&quot;menu_button_desc&quot;&gt;Menu&lt;/string&gt;&#10;    &lt;string name=&quot;profile_picture_desc&quot;&gt;Profile picture&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_open&quot;&gt;Open navigation drawer&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_close&quot;&gt;Close navigation drawer&lt;/string&gt;&#10;    &lt;!-- Terms &amp; Service --&gt;&#10;    &lt;string name=&quot;terms_adult&quot;&gt;Full Terms &amp;amp; Service for adults…&lt;/string&gt;&#10;    &lt;string name=&quot;terms_minor&quot;&gt;Simplified Terms for minors…&lt;/string&gt;&#10;    &lt;!-- Privacy Policy --&gt;&#10;    &lt;string name=&quot;privacy_adult&quot;&gt;Privacy Policy (Adult) …&lt;/string&gt;&#10;    &lt;string name=&quot;privacy_minor&quot;&gt;Privacy Policy (Minor) …&lt;/string&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;string name=&quot;dashboard&quot;&gt;DASHBOARD&lt;/string&gt;&#10;    &lt;string name=&quot;letters&quot;&gt;LETTERS&lt;/string&gt;&#10;    &lt;string name=&quot;username&quot;&gt;Rodney&lt;/string&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Hello, PH0906!&lt;/string&gt;&#10;    &lt;string name=&quot;back_button_desc&quot;&gt;Back&lt;/string&gt;&#10;    &lt;string name=&quot;menu_button_desc&quot;&gt;Menu&lt;/string&gt;&#10;    &lt;string name=&quot;profile_picture_desc&quot;&gt;Profile picture&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_open&quot;&gt;Open navigation drawer&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_close&quot;&gt;Close navigation drawer&lt;/string&gt;&#10;    &lt;!-- Terms &amp; Service --&gt;&#10;    &lt;string name=&quot;terms_adult&quot;&gt;Full Terms &amp;amp; Service for adults…&lt;/string&gt;&#10;    &lt;string name=&quot;terms_minor&quot;&gt;Simplified Terms for minors…&lt;/string&gt;&#10;    &lt;!-- Privacy Policy --&gt;&#10;    &lt;string name=&quot;privacy_adult&quot;&gt;Privacy Policy (Adult) …&lt;/string&gt;&#10;    &lt;string name=&quot;privacy_minor&quot;&gt;Privacy Policy (Minor) …&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>