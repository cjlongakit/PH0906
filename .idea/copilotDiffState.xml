<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace 'com.example.ph906_spalshscreen'&#10;    compileSdk 35&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.example.ph906_spalshscreen&quot;&#10;        minSdk 28&#10;        targetSdk 35&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility JavaVersion.VERSION_11&#10;        targetCompatibility JavaVersion.VERSION_11&#10;    }&#10;}&#10;&#10;configurations.all {&#10;    exclude group: 'com.android.support'&#10;}&#10;&#10;dependencies {&#10;    // AndroidX + Material&#10;    implementation libs.appcompat&#10;    implementation libs.material&#10;    implementation libs.activity&#10;    implementation libs.constraintlayout&#10;&#10;    // Unit/UI testing&#10;    testImplementation libs.junit&#10;    androidTestImplementation libs.ext.junit&#10;    androidTestImplementation libs.espresso.core&#10;&#10;    // Retrofit + Gson&#10;    implementation 'com.squareup.retrofit2:retrofit:2.9.0'&#10;    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'&#10;&#10;    // OkHttp (align versions)&#10;    implementation 'com.squareup.okhttp3:okhttp:4.12.0'&#10;    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'&#10;&#10;    // Gson (JSON parser)&#10;    implementation 'com.google.code.gson:gson:2.10.1'&#10;&#10;    // RecyclerView&#10;    implementation 'androidx.recyclerview:recyclerview:1.3.0'&#10;&#10;    implementation 'org.json:json:20231013'&#10;&#10;    implementation 'com.android.volley:volley:1.2.1'&#10;&#10;    implementation 'com.github.bumptech.glide:glide:4.16.0'&#10;    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'&#10;&#10;    // Calendar view with decorators (dot indicators)&#10;    implementation('com.github.prolificinteractive:material-calendarview:2.0.1') {&#10;        exclude group: 'com.android.support'&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace 'com.example.ph906_spalshscreen'&#10;    compileSdk 35&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.example.ph906_spalshscreen&quot;&#10;        minSdk 28&#10;        targetSdk 35&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility JavaVersion.VERSION_11&#10;        targetCompatibility JavaVersion.VERSION_11&#10;    }&#10;}&#10;&#10;configurations.all {&#10;    exclude group: 'com.android.support'&#10;}&#10;&#10;dependencies {&#10;    // AndroidX + Material&#10;    implementation libs.appcompat&#10;    implementation libs.material&#10;    implementation libs.activity&#10;    implementation libs.constraintlayout&#10;&#10;    // Unit/UI testing&#10;    testImplementation libs.junit&#10;    androidTestImplementation libs.ext.junit&#10;    androidTestImplementation libs.espresso.core&#10;&#10;    // Retrofit + Gson&#10;    implementation 'com.squareup.retrofit2:retrofit:2.9.0'&#10;    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'&#10;&#10;    // OkHttp (align versions)&#10;    implementation 'com.squareup.okhttp3:okhttp:4.12.0'&#10;    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'&#10;&#10;    // Gson (JSON parser)&#10;    implementation 'com.google.code.gson:gson:2.10.1'&#10;&#10;    // RecyclerView&#10;    implementation 'androidx.recyclerview:recyclerview:1.3.0'&#10;&#10;    implementation 'org.json:json:20231013'&#10;&#10;    implementation 'com.android.volley:volley:1.2.1'&#10;&#10;    implementation 'com.github.bumptech.glide:glide:4.16.0'&#10;    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'&#10;&#10;    // Calendar view with decorators (dot indicators)&#10;    implementation('com.github.prolificinteractive:material-calendarview:2.0.1') {&#10;        exclude group: 'com.android.support'&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/MainActivity.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.view.View;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.ActionBarDrawerToggle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.core.view.GravityCompat;&#10;import androidx.drawerlayout.widget.DrawerLayout;&#10;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;import com.example.ph906_spalshscreen.ui.about.AboutFragment;&#10;import com.example.ph906_spalshscreen.ui.letters.LettersFragment;&#10;import com.example.ph906_spalshscreen.ui.profile.ProfileFragment;&#10;import com.example.ph906_spalshscreen.ui.home.HomeFragment;&#10;import com.google.android.material.navigation.NavigationView;&#10;&#10;public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    private static final String TAG = &quot;MainActivity&quot;;&#10;&#10;    private DrawerLayout drawerLayout;&#10;    private NavigationView navigationView;&#10;    private Toolbar toolbar;&#10;    private ApiClient apiClient;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main); // make sure you have activity_main.xml&#10;&#10;        // Init ApiClient&#10;        apiClient = new ApiClient(this);&#10;&#10;        // Check login status&#10;        if (!apiClient.isLoggedIn()) {&#10;            startActivity(new Intent(this, LoginActivity.class));&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Setup Toolbar&#10;        toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        // Setup Drawer&#10;        drawerLayout = findViewById(R.id.drawer_layout);&#10;        navigationView = findViewById(R.id.nav_view);&#10;        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(&#10;                this, drawerLayout, toolbar,&#10;                R.string.navigation_drawer_open,&#10;                R.string.navigation_drawer_close&#10;        );&#10;        drawerLayout.addDrawerListener(toggle);&#10;        toggle.syncState();&#10;        navigationView.setNavigationItemSelectedListener(this);&#10;&#10;        // Update header with logged-in user info&#10;        updateNavigationHeader();&#10;&#10;        // --- HANDLE DASHBOARD BUTTONS ---&#10;        Button btnLetters = findViewById(R.id.btn_letters);&#10;        if (btnLetters != null) {&#10;            btnLetters.setOnClickListener(v -&gt; {&#10;                Log.d(TAG, &quot;Letters button clicked&quot;);&#10;                // Replace fragment instead of starting activity&#10;                getSupportFragmentManager()&#10;                        .beginTransaction()&#10;                        .replace(R.id.fragment_container, new LettersFragment())&#10;                        .addToBackStack(null)&#10;                        .commit();&#10;            });&#10;        }&#10;&#10;        // Ensure HomeFragment is loaded as the default fragment&#10;        if (savedInstanceState == null) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        }&#10;    }&#10;&#10;    private void updateNavigationHeader() {&#10;        if (navigationView != null) {&#10;            View header = null;&#10;            try { header = navigationView.getHeaderView(0); } catch (Exception ignored) {}&#10;            if (header == null) {&#10;                try { header = navigationView.inflateHeaderView(R.layout.nav_header); } catch (Exception ignored) {}&#10;            }&#10;            if (header != null) {&#10;                TextView tvName = header.findViewById(R.id.nav_username);&#10;                TextView tvId = header.findViewById(R.id.nav_student_id);&#10;&#10;                String fullName = apiClient.getFullName();&#10;                String studentId = apiClient.getLoggedInStudentId();&#10;&#10;                if (tvName != null) tvName.setText(fullName != null ? fullName : &quot;Unknown User&quot;);&#10;                if (tvId != null) tvId.setText(studentId != null ? &quot;ID: &quot; + studentId : &quot;ID: N/A&quot;);&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onNavigationItemSelected(@NonNull MenuItem item) {&#10;        int id = item.getItemId();&#10;&#10;        if (id == R.id.nav_home) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        } else if (id == R.id.nav_profile) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new ProfileFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_change_password) {&#10;            startActivity(new Intent(this, ChangePasswordActivity.class));&#10;        } else if (id == R.id.nav_about) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new AboutFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_logout) {&#10;            logoutUser();&#10;        }&#10;&#10;        drawerLayout.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;&#10;    private void logoutUser() {&#10;        apiClient.logout();&#10;        Intent intent = new Intent(MainActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {&#10;            drawerLayout.closeDrawer(GravityCompat.START);&#10;        } else {&#10;            super.onBackPressed();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateNavigationHeader();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.view.View;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.ActionBarDrawerToggle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.core.view.GravityCompat;&#10;import androidx.drawerlayout.widget.DrawerLayout;&#10;&#10;import com.example.ph906_spalshscreen.api.ApiClient;&#10;import com.example.ph906_spalshscreen.ui.about.AboutFragment;&#10;import com.example.ph906_spalshscreen.ui.letters.LettersFragment;&#10;import com.example.ph906_spalshscreen.ui.profile.ProfileFragment;&#10;import com.example.ph906_spalshscreen.ui.home.HomeFragment;&#10;import com.google.android.material.navigation.NavigationView;&#10;&#10;public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    private static final String TAG = &quot;MainActivity&quot;;&#10;&#10;    private DrawerLayout drawerLayout;&#10;    private NavigationView navigationView;&#10;    private Toolbar toolbar;&#10;    private ApiClient apiClient;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main); // make sure you have activity_main.xml&#10;&#10;        // Init ApiClient&#10;        apiClient = new ApiClient(this);&#10;&#10;        // Check login status&#10;        if (!apiClient.isLoggedIn()) {&#10;            startActivity(new Intent(this, LoginActivity.class));&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        // Setup Toolbar&#10;        toolbar = findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        // Setup Drawer&#10;        drawerLayout = findViewById(R.id.drawer_layout);&#10;        navigationView = findViewById(R.id.nav_view);&#10;        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(&#10;                this, drawerLayout, toolbar,&#10;                R.string.navigation_drawer_open,&#10;                R.string.navigation_drawer_close&#10;        );&#10;        drawerLayout.addDrawerListener(toggle);&#10;        toggle.syncState();&#10;        navigationView.setNavigationItemSelectedListener(this);&#10;&#10;        // Update header with logged-in user info&#10;        updateNavigationHeader();&#10;&#10;        // --- HANDLE DASHBOARD BUTTONS ---&#10;        Button btnLetters = findViewById(R.id.btn_letters);&#10;        if (btnLetters != null) {&#10;            btnLetters.setOnClickListener(v -&gt; {&#10;                Log.d(TAG, &quot;Letters button clicked&quot;);&#10;                // Replace fragment instead of starting activity&#10;                getSupportFragmentManager()&#10;                        .beginTransaction()&#10;                        .replace(R.id.fragment_container, new LettersFragment())&#10;                        .addToBackStack(null)&#10;                        .commit();&#10;            });&#10;        }&#10;&#10;        // Ensure HomeFragment is loaded as the default fragment&#10;        if (savedInstanceState == null) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        }&#10;    }&#10;&#10;    private void updateNavigationHeader() {&#10;        if (navigationView != null) {&#10;            View header = null;&#10;            try { header = navigationView.getHeaderView(0); } catch (Exception ignored) {}&#10;            if (header == null) {&#10;                try { header = navigationView.inflateHeaderView(R.layout.nav_header); } catch (Exception ignored) {}&#10;            }&#10;            if (header != null) {&#10;                TextView tvName = header.findViewById(R.id.nav_username);&#10;                TextView tvId = header.findViewById(R.id.nav_student_id);&#10;&#10;                String fullName = apiClient.getFullName();&#10;                String studentId = apiClient.getLoggedInStudentId();&#10;&#10;                if (tvName != null) tvName.setText(fullName != null ? fullName : &quot;Unknown User&quot;);&#10;                if (tvId != null) tvId.setText(studentId != null ? &quot;ID: &quot; + studentId : &quot;ID: N/A&quot;);&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onNavigationItemSelected(@NonNull MenuItem item) {&#10;        int id = item.getItemId();&#10;&#10;        if (id == R.id.nav_home) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new HomeFragment())&#10;                .commit();&#10;        } else if (id == R.id.nav_profile) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new ProfileFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_change_password) {&#10;            startActivity(new Intent(this, ChangePasswordActivity.class));&#10;        } else if (id == R.id.nav_about) {&#10;            getSupportFragmentManager()&#10;                .beginTransaction()&#10;                .replace(R.id.fragment_container, new AboutFragment())&#10;                .addToBackStack(null)&#10;                .commit();&#10;        } else if (id == R.id.nav_logout) {&#10;            logoutUser();&#10;        }&#10;&#10;        drawerLayout.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;&#10;    private void logoutUser() {&#10;        apiClient.logout();&#10;        Intent intent = new Intent(MainActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {&#10;            drawerLayout.closeDrawer(GravityCompat.START);&#10;        } else {&#10;            super.onBackPressed();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateNavigationHeader();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/PrivacyActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ph906_spalshscreen/PrivacyActivity.java" />
              <option name="originalContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyAdultFragment;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyMinorFragment;&#10;&#10;public class PrivacyActivity extends AppCompatActivity {&#10;&#10;    private String version;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_privacy);&#10;&#10;        version = getIntent().getStringExtra(&quot;version&quot;);&#10;        if (version == null || version.trim().isEmpty()) version = &quot;minor&quot;;&#10;&#10;        Fragment fragment = &quot;minor&quot;.equals(version)&#10;                ? new DataPrivacyMinorFragment()&#10;                : new DataPrivacyAdultFragment();&#10;&#10;        getSupportFragmentManager().beginTransaction()&#10;                .replace(R.id.privacy_container, fragment)&#10;                .commit();&#10;    }&#10;&#10;    // Called by your fragment when user taps &quot;Agree&quot;&#10;    public void onAgreed() {&#10;        new PrefManager(this).acceptPrivacy(version, true);&#10;&#10;        startActivity(new Intent(this, MainActivity.class)&#10;                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));&#10;        finish();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ph906_spalshscreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.fragment.app.Fragment;&#10;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyAdultFragment;&#10;import com.example.ph906_spalshscreen.ui.privacy.DataPrivacyMinorFragment;&#10;&#10;public class PrivacyActivity extends AppCompatActivity {&#10;&#10;    private String version;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_privacy);&#10;&#10;        version = getIntent().getStringExtra(&quot;version&quot;);&#10;        if (version == null || version.trim().isEmpty()) version = &quot;minor&quot;;&#10;&#10;        Fragment fragment = &quot;minor&quot;.equals(version)&#10;                ? new DataPrivacyMinorFragment()&#10;                : new DataPrivacyAdultFragment();&#10;&#10;        getSupportFragmentManager().beginTransaction()&#10;                .replace(R.id.privacy_container, fragment)&#10;                .commit();&#10;    }&#10;&#10;    // Called by your fragment when user taps &quot;Agree&quot;&#10;    public void onAgreed() {&#10;        new PrefManager(this).acceptPrivacy(version, true);&#10;&#10;        startActivity(new Intent(this, MainActivity.class)&#10;                .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK));&#10;        finish();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_letters.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_letters.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_bg&quot;&#10;    tools:context=&quot;.ui.letters.LettersFragment&quot;&gt;&#10;&#10;    &lt;!-- Search Bar + Filter --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/layout_search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/btn_gradient&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etSearch&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:hint=&quot;Search by ID or name&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textColorHint=&quot;#AAAAAA&quot;&#10;            android:paddingStart=&quot;12dp&quot;&#10;            android:paddingEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnFilter&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;⚙&quot;&#10;            android:backgroundTint=&quot;@color/colorAccent&quot;&#10;            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Filter Buttons --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/filter_scroll&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/layout_search&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnAll&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ALL&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnPending&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PENDING&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnOnHand&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ON HAND&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnedIn&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURNED IN&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnInLate&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURN IN LATE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;!-- RecyclerView --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewLetters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/filter_scroll&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_bg&quot;&#10;    tools:context=&quot;.ui.letters.LettersFragment&quot;&gt;&#10;&#10;    &lt;!-- Search Bar + Filter --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/layout_search&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:background=&quot;@drawable/btn_gradient&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/etSearch&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:hint=&quot;Search by ID or name&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:textColorHint=&quot;#AAAAAA&quot;&#10;            android:paddingStart=&quot;12dp&quot;&#10;            android:paddingEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btnFilter&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:text=&quot;⚙&quot;&#10;            android:backgroundTint=&quot;@color/colorAccent&quot;&#10;            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Filter Buttons --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/filter_scroll&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/layout_search&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnAll&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ALL&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnPending&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PENDING&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnOnHand&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;ON HAND&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnedIn&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURNED IN&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnTurnInLate&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;TURN IN LATE&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                app:strokeColor=&quot;@android:color/white&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;!-- RecyclerView --&gt;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewLetters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/filter_scroll&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;string name=&quot;dashboard&quot;&gt;DASHBOARD&lt;/string&gt;&#10;    &lt;string name=&quot;letters&quot;&gt;LETTERS&lt;/string&gt;&#10;    &lt;string name=&quot;username&quot;&gt;Rodney&lt;/string&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Hello, PH0906!&lt;/string&gt;&#10;    &lt;string name=&quot;back_button_desc&quot;&gt;Back&lt;/string&gt;&#10;    &lt;string name=&quot;menu_button_desc&quot;&gt;Menu&lt;/string&gt;&#10;    &lt;string name=&quot;profile_picture_desc&quot;&gt;Profile picture&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_open&quot;&gt;Open navigation drawer&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_close&quot;&gt;Close navigation drawer&lt;/string&gt;&#10;    &lt;!-- Terms &amp; Service --&gt;&#10;    &lt;string name=&quot;terms_adult&quot;&gt;Full Terms &amp;amp; Service for adults…&lt;/string&gt;&#10;    &lt;string name=&quot;terms_minor&quot;&gt;Simplified Terms for minors…&lt;/string&gt;&#10;    &lt;!-- Privacy Policy --&gt;&#10;    &lt;string name=&quot;privacy_adult&quot;&gt;Privacy Policy (Adult) …&lt;/string&gt;&#10;    &lt;string name=&quot;privacy_minor&quot;&gt;Privacy Policy (Minor) …&lt;/string&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;string name=&quot;dashboard&quot;&gt;DASHBOARD&lt;/string&gt;&#10;    &lt;string name=&quot;letters&quot;&gt;LETTERS&lt;/string&gt;&#10;    &lt;string name=&quot;username&quot;&gt;Rodney&lt;/string&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Hello, PH0906!&lt;/string&gt;&#10;    &lt;string name=&quot;back_button_desc&quot;&gt;Back&lt;/string&gt;&#10;    &lt;string name=&quot;menu_button_desc&quot;&gt;Menu&lt;/string&gt;&#10;    &lt;string name=&quot;profile_picture_desc&quot;&gt;Profile picture&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_open&quot;&gt;Open navigation drawer&lt;/string&gt;&#10;    &lt;string name=&quot;navigation_drawer_close&quot;&gt;Close navigation drawer&lt;/string&gt;&#10;    &lt;!-- Terms &amp; Service --&gt;&#10;    &lt;string name=&quot;terms_adult&quot;&gt;Full Terms &amp;amp; Service for adults…&lt;/string&gt;&#10;    &lt;string name=&quot;terms_minor&quot;&gt;Simplified Terms for minors…&lt;/string&gt;&#10;    &lt;!-- Privacy Policy --&gt;&#10;    &lt;string name=&quot;privacy_adult&quot;&gt;Privacy Policy (Adult) …&lt;/string&gt;&#10;    &lt;string name=&quot;privacy_minor&quot;&gt;Privacy Policy (Minor) …&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>